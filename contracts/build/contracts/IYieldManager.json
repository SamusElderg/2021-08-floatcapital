{
  "contractName": "IYieldManager",
  "abi": [
    {
      "anonymous": false,
      "inputs": [],
      "name": "WithdrawTreasuryFunds",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "unrealizedYield",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "treasuryYieldPercent_e18",
          "type": "uint256"
        }
      ],
      "name": "YieldDistributed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "totalReservedForTreasury",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "depositPaymentToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferPaymentTokensToUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "removePaymentTokenFromMarket",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "totalValueRealizedForMarket",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "treasuryYieldPercent_e18",
          "type": "uint256"
        }
      ],
      "name": "distributeYieldForTreasuryAndReturnMarketAllocation",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountForMarketIncentives",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawTreasuryFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"WithdrawTreasuryFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unrealizedYield\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"treasuryYieldPercent_e18\",\"type\":\"uint256\"}],\"name\":\"YieldDistributed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositPaymentToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalValueRealizedForMarket\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"treasuryYieldPercent_e18\",\"type\":\"uint256\"}],\"name\":\"distributeYieldForTreasuryAndReturnMarketAllocation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountForMarketIncentives\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"removePaymentTokenFromMarket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalReservedForTreasury\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferPaymentTokensToUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawTreasuryFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"WithdrawTreasuryFunds()\":{\"details\":\"This is purely saving some gas, but the subgraph will know how much is due for the treasury at all times - no need to include in event.\"}},\"kind\":\"dev\",\"methods\":{\"depositPaymentToken(uint256)\":{\"params\":{\"amount\":\"Amount of payment token to deposit\"}},\"distributeYieldForTreasuryAndReturnMarketAllocation(uint256,uint256)\":{\"details\":\"treasuryPercent = 1 - marketPercent\",\"params\":{\"totalValueRealizedForMarket\":\"total value of long and short side of the market\",\"treasuryYieldPercent_e18\":\"Percentage of yield in base 1e18 that is allocated to the treasury\"},\"returns\":{\"amountForMarketIncentives\":\"The market allocation of the yield\"}},\"removePaymentTokenFromMarket(uint256)\":{\"params\":{\"amount\":\"Amount of payment token to withdraw\"}},\"transferPaymentTokensToUser(address,uint256)\":{\"params\":{\"amount\":\"Amount of payment token to pay to user\",\"user\":\"User to recieve the payout\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"depositPaymentToken(uint256)\":{\"notice\":\"Deposits the given amount of payment tokens into this yield manager.\"},\"distributeYieldForTreasuryAndReturnMarketAllocation(uint256,uint256)\":{\"notice\":\"Calculates and updates the yield allocation to the treasury and the market\"},\"removePaymentTokenFromMarket(uint256)\":{\"notice\":\"Withdraws the given amount of tokens from this yield manager.\"},\"totalReservedForTreasury()\":{\"notice\":\"distributed yield not yet transferred to the treasury\"},\"transferPaymentTokensToUser(address,uint256)\":{\"notice\":\"Allows the LongShort pay out a user from tokens already withdrawn from Aave\"},\"withdrawTreasuryFunds()\":{\"notice\":\"Withdraw treasury allocated accrued yield from the lending pool to the treasury contract\"}},\"notice\":\"Manages yield accumulation for the LongShort contract. Each market is deployed with its own yield manager to simplify the bookkeeping, as different markets may share a payment token and yield pool.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/jasoons/Documents/code/monorepo/contracts/contracts/interfaces/IYieldManager.sol\":\"IYieldManager\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/jasoons/Documents/code/monorepo/contracts/contracts/interfaces/IYieldManager.sol\":{\"keccak256\":\"0xbae19691e23f718a2182c38d69798dc7999fec2d19d50819aa20561515191da7\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://deec20c0dd3fe62be86e331f56c375dae27e66a1d92e03754fe52478b578df57\",\"dweb:/ipfs/QmdSFn7HyhyNyVkQZTsL6kmBAkT2Pdoqosrsj7S29AbRTH\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: BUSL-1.1\n\npragma solidity 0.8.3;\n\n/// @notice Manages yield accumulation for the LongShort contract. Each market is deployed with its own yield manager to simplify the bookkeeping, as different markets may share a payment token and yield pool.\nabstract contract IYieldManager {\n  event YieldDistributed(uint256 unrealizedYield, uint256 treasuryYieldPercent_e18);\n\n  /// @dev This is purely saving some gas, but the subgraph will know how much is due for the treasury at all times - no need to include in event.\n  event WithdrawTreasuryFunds();\n\n  /// @notice distributed yield not yet transferred to the treasury\n  function totalReservedForTreasury() external virtual returns (uint256);\n\n  /// @notice Deposits the given amount of payment tokens into this yield manager.\n  /// @param amount Amount of payment token to deposit\n  function depositPaymentToken(uint256 amount) external virtual;\n\n  /// @notice Allows the LongShort pay out a user from tokens already withdrawn from Aave\n  /// @param user User to recieve the payout\n  /// @param amount Amount of payment token to pay to user\n  function transferPaymentTokensToUser(address user, uint256 amount) external virtual;\n\n  /// @notice Withdraws the given amount of tokens from this yield manager.\n  /// @param amount Amount of payment token to withdraw\n  function removePaymentTokenFromMarket(uint256 amount) external virtual;\n\n  /**    \n    @notice Calculates and updates the yield allocation to the treasury and the market\n    @dev treasuryPercent = 1 - marketPercent\n    @param totalValueRealizedForMarket total value of long and short side of the market\n    @param treasuryYieldPercent_e18 Percentage of yield in base 1e18 that is allocated to the treasury\n    @return amountForMarketIncentives The market allocation of the yield\n  */\n  function distributeYieldForTreasuryAndReturnMarketAllocation(\n    uint256 totalValueRealizedForMarket,\n    uint256 treasuryYieldPercent_e18\n  ) external virtual returns (uint256 amountForMarketIncentives);\n\n  /// @notice Withdraw treasury allocated accrued yield from the lending pool to the treasury contract\n  function withdrawTreasuryFunds() external virtual;\n}\n",
  "sourcePath": "/home/jasoons/Documents/code/monorepo/contracts/contracts/interfaces/IYieldManager.sol",
  "ast": {
    "absolutePath": "/home/jasoons/Documents/code/monorepo/contracts/contracts/interfaces/IYieldManager.sol",
    "exportedSymbols": {
      "IYieldManager": [
        6043
      ]
    },
    "id": 6044,
    "license": "BUSL-1.1",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5992,
        "literals": [
          "solidity",
          "0.8",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "38:22:16"
      },
      {
        "abstract": true,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5993,
          "nodeType": "StructuredDocumentation",
          "src": "62:210:16",
          "text": "@notice Manages yield accumulation for the LongShort contract. Each market is deployed with its own yield manager to simplify the bookkeeping, as different markets may share a payment token and yield pool."
        },
        "fullyImplemented": false,
        "id": 6043,
        "linearizedBaseContracts": [
          6043
        ],
        "name": "IYieldManager",
        "nameLocation": "290:13:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 5999,
            "name": "YieldDistributed",
            "nameLocation": "314:16:16",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5998,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5995,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "unrealizedYield",
                  "nameLocation": "339:15:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5999,
                  "src": "331:23:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5994,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "331:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5997,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "treasuryYieldPercent_e18",
                  "nameLocation": "364:24:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5999,
                  "src": "356:32:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5996,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "356:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "330:59:16"
            },
            "src": "308:82:16"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 6000,
              "nodeType": "StructuredDocumentation",
              "src": "394:144:16",
              "text": "@dev This is purely saving some gas, but the subgraph will know how much is due for the treasury at all times - no need to include in event."
            },
            "id": 6002,
            "name": "WithdrawTreasuryFunds",
            "nameLocation": "547:21:16",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6001,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "568:2:16"
            },
            "src": "541:30:16"
          },
          {
            "documentation": {
              "id": 6003,
              "nodeType": "StructuredDocumentation",
              "src": "575:65:16",
              "text": "@notice distributed yield not yet transferred to the treasury"
            },
            "functionSelector": "2429e535",
            "id": 6008,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "totalReservedForTreasury",
            "nameLocation": "652:24:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6004,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "676:2:16"
            },
            "returnParameters": {
              "id": 6007,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6006,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6008,
                  "src": "705:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6005,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "705:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "704:9:16"
            },
            "scope": 6043,
            "src": "643:71:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 6009,
              "nodeType": "StructuredDocumentation",
              "src": "718:135:16",
              "text": "@notice Deposits the given amount of payment tokens into this yield manager.\n @param amount Amount of payment token to deposit"
            },
            "functionSelector": "9063ee20",
            "id": 6014,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "depositPaymentToken",
            "nameLocation": "865:19:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6012,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6011,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "893:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 6014,
                  "src": "885:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6010,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "885:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "884:16:16"
            },
            "returnParameters": {
              "id": 6013,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "917:0:16"
            },
            "scope": 6043,
            "src": "856:62:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 6015,
              "nodeType": "StructuredDocumentation",
              "src": "922:191:16",
              "text": "@notice Allows the LongShort pay out a user from tokens already withdrawn from Aave\n @param user User to recieve the payout\n @param amount Amount of payment token to pay to user"
            },
            "functionSelector": "eb6bffa2",
            "id": 6022,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferPaymentTokensToUser",
            "nameLocation": "1125:27:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6017,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1161:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 6022,
                  "src": "1153:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6016,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1153:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6019,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1175:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 6022,
                  "src": "1167:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6018,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1167:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1152:30:16"
            },
            "returnParameters": {
              "id": 6021,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1199:0:16"
            },
            "scope": 6043,
            "src": "1116:84:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 6023,
              "nodeType": "StructuredDocumentation",
              "src": "1204:129:16",
              "text": "@notice Withdraws the given amount of tokens from this yield manager.\n @param amount Amount of payment token to withdraw"
            },
            "functionSelector": "1c499b55",
            "id": 6028,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removePaymentTokenFromMarket",
            "nameLocation": "1345:28:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6026,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6025,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1382:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 6028,
                  "src": "1374:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6024,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1374:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1373:16:16"
            },
            "returnParameters": {
              "id": 6027,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1406:0:16"
            },
            "scope": 6043,
            "src": "1336:71:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 6029,
              "nodeType": "StructuredDocumentation",
              "src": "1411:408:16",
              "text": "@notice Calculates and updates the yield allocation to the treasury and the market\n@dev treasuryPercent = 1 - marketPercent\n@param totalValueRealizedForMarket total value of long and short side of the market\n@param treasuryYieldPercent_e18 Percentage of yield in base 1e18 that is allocated to the treasury\n@return amountForMarketIncentives The market allocation of the yield"
            },
            "functionSelector": "8a5599b2",
            "id": 6038,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "distributeYieldForTreasuryAndReturnMarketAllocation",
            "nameLocation": "1831:51:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6034,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6031,
                  "mutability": "mutable",
                  "name": "totalValueRealizedForMarket",
                  "nameLocation": "1896:27:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 6038,
                  "src": "1888:35:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6030,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1888:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6033,
                  "mutability": "mutable",
                  "name": "treasuryYieldPercent_e18",
                  "nameLocation": "1937:24:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 6038,
                  "src": "1929:32:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6032,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1929:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1882:83:16"
            },
            "returnParameters": {
              "id": 6037,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6036,
                  "mutability": "mutable",
                  "name": "amountForMarketIncentives",
                  "nameLocation": "2000:25:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 6038,
                  "src": "1992:33:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6035,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1992:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1991:35:16"
            },
            "scope": 6043,
            "src": "1822:205:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 6039,
              "nodeType": "StructuredDocumentation",
              "src": "2031:100:16",
              "text": "@notice Withdraw treasury allocated accrued yield from the lending pool to the treasury contract"
            },
            "functionSelector": "447479db",
            "id": 6042,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawTreasuryFunds",
            "nameLocation": "2143:21:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6040,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2164:2:16"
            },
            "returnParameters": {
              "id": 6041,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2183:0:16"
            },
            "scope": 6043,
            "src": "2134:50:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "scope": 6044,
        "src": "272:1914:16"
      }
    ],
    "src": "38:2149:16"
  },
  "legacyAST": {
    "absolutePath": "/home/jasoons/Documents/code/monorepo/contracts/contracts/interfaces/IYieldManager.sol",
    "exportedSymbols": {
      "IYieldManager": [
        6043
      ]
    },
    "id": 6044,
    "license": "BUSL-1.1",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5992,
        "literals": [
          "solidity",
          "0.8",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "38:22:16"
      },
      {
        "abstract": true,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5993,
          "nodeType": "StructuredDocumentation",
          "src": "62:210:16",
          "text": "@notice Manages yield accumulation for the LongShort contract. Each market is deployed with its own yield manager to simplify the bookkeeping, as different markets may share a payment token and yield pool."
        },
        "fullyImplemented": false,
        "id": 6043,
        "linearizedBaseContracts": [
          6043
        ],
        "name": "IYieldManager",
        "nameLocation": "290:13:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 5999,
            "name": "YieldDistributed",
            "nameLocation": "314:16:16",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5998,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5995,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "unrealizedYield",
                  "nameLocation": "339:15:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5999,
                  "src": "331:23:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5994,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "331:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5997,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "treasuryYieldPercent_e18",
                  "nameLocation": "364:24:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5999,
                  "src": "356:32:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5996,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "356:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "330:59:16"
            },
            "src": "308:82:16"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 6000,
              "nodeType": "StructuredDocumentation",
              "src": "394:144:16",
              "text": "@dev This is purely saving some gas, but the subgraph will know how much is due for the treasury at all times - no need to include in event."
            },
            "id": 6002,
            "name": "WithdrawTreasuryFunds",
            "nameLocation": "547:21:16",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6001,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "568:2:16"
            },
            "src": "541:30:16"
          },
          {
            "documentation": {
              "id": 6003,
              "nodeType": "StructuredDocumentation",
              "src": "575:65:16",
              "text": "@notice distributed yield not yet transferred to the treasury"
            },
            "functionSelector": "2429e535",
            "id": 6008,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "totalReservedForTreasury",
            "nameLocation": "652:24:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6004,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "676:2:16"
            },
            "returnParameters": {
              "id": 6007,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6006,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6008,
                  "src": "705:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6005,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "705:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "704:9:16"
            },
            "scope": 6043,
            "src": "643:71:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 6009,
              "nodeType": "StructuredDocumentation",
              "src": "718:135:16",
              "text": "@notice Deposits the given amount of payment tokens into this yield manager.\n @param amount Amount of payment token to deposit"
            },
            "functionSelector": "9063ee20",
            "id": 6014,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "depositPaymentToken",
            "nameLocation": "865:19:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6012,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6011,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "893:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 6014,
                  "src": "885:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6010,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "885:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "884:16:16"
            },
            "returnParameters": {
              "id": 6013,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "917:0:16"
            },
            "scope": 6043,
            "src": "856:62:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 6015,
              "nodeType": "StructuredDocumentation",
              "src": "922:191:16",
              "text": "@notice Allows the LongShort pay out a user from tokens already withdrawn from Aave\n @param user User to recieve the payout\n @param amount Amount of payment token to pay to user"
            },
            "functionSelector": "eb6bffa2",
            "id": 6022,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferPaymentTokensToUser",
            "nameLocation": "1125:27:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6017,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1161:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 6022,
                  "src": "1153:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6016,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1153:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6019,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1175:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 6022,
                  "src": "1167:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6018,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1167:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1152:30:16"
            },
            "returnParameters": {
              "id": 6021,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1199:0:16"
            },
            "scope": 6043,
            "src": "1116:84:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 6023,
              "nodeType": "StructuredDocumentation",
              "src": "1204:129:16",
              "text": "@notice Withdraws the given amount of tokens from this yield manager.\n @param amount Amount of payment token to withdraw"
            },
            "functionSelector": "1c499b55",
            "id": 6028,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removePaymentTokenFromMarket",
            "nameLocation": "1345:28:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6026,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6025,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1382:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 6028,
                  "src": "1374:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6024,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1374:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1373:16:16"
            },
            "returnParameters": {
              "id": 6027,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1406:0:16"
            },
            "scope": 6043,
            "src": "1336:71:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 6029,
              "nodeType": "StructuredDocumentation",
              "src": "1411:408:16",
              "text": "@notice Calculates and updates the yield allocation to the treasury and the market\n@dev treasuryPercent = 1 - marketPercent\n@param totalValueRealizedForMarket total value of long and short side of the market\n@param treasuryYieldPercent_e18 Percentage of yield in base 1e18 that is allocated to the treasury\n@return amountForMarketIncentives The market allocation of the yield"
            },
            "functionSelector": "8a5599b2",
            "id": 6038,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "distributeYieldForTreasuryAndReturnMarketAllocation",
            "nameLocation": "1831:51:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6034,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6031,
                  "mutability": "mutable",
                  "name": "totalValueRealizedForMarket",
                  "nameLocation": "1896:27:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 6038,
                  "src": "1888:35:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6030,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1888:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6033,
                  "mutability": "mutable",
                  "name": "treasuryYieldPercent_e18",
                  "nameLocation": "1937:24:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 6038,
                  "src": "1929:32:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6032,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1929:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1882:83:16"
            },
            "returnParameters": {
              "id": 6037,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6036,
                  "mutability": "mutable",
                  "name": "amountForMarketIncentives",
                  "nameLocation": "2000:25:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 6038,
                  "src": "1992:33:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6035,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1992:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1991:35:16"
            },
            "scope": 6043,
            "src": "1822:205:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 6039,
              "nodeType": "StructuredDocumentation",
              "src": "2031:100:16",
              "text": "@notice Withdraw treasury allocated accrued yield from the lending pool to the treasury contract"
            },
            "functionSelector": "447479db",
            "id": 6042,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawTreasuryFunds",
            "nameLocation": "2143:21:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6040,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2164:2:16"
            },
            "returnParameters": {
              "id": 6041,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2183:0:16"
            },
            "scope": 6043,
            "src": "2134:50:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "scope": 6044,
        "src": "272:1914:16"
      }
    ],
    "src": "38:2149:16"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.3+commit.8d00100c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-08-04T10:05:03.794Z",
  "devdoc": {
    "events": {
      "WithdrawTreasuryFunds()": {
        "details": "This is purely saving some gas, but the subgraph will know how much is due for the treasury at all times - no need to include in event."
      }
    },
    "kind": "dev",
    "methods": {
      "depositPaymentToken(uint256)": {
        "params": {
          "amount": "Amount of payment token to deposit"
        }
      },
      "distributeYieldForTreasuryAndReturnMarketAllocation(uint256,uint256)": {
        "details": "treasuryPercent = 1 - marketPercent",
        "params": {
          "totalValueRealizedForMarket": "total value of long and short side of the market",
          "treasuryYieldPercent_e18": "Percentage of yield in base 1e18 that is allocated to the treasury"
        },
        "returns": {
          "amountForMarketIncentives": "The market allocation of the yield"
        }
      },
      "removePaymentTokenFromMarket(uint256)": {
        "params": {
          "amount": "Amount of payment token to withdraw"
        }
      },
      "transferPaymentTokensToUser(address,uint256)": {
        "params": {
          "amount": "Amount of payment token to pay to user",
          "user": "User to recieve the payout"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "depositPaymentToken(uint256)": {
        "notice": "Deposits the given amount of payment tokens into this yield manager."
      },
      "distributeYieldForTreasuryAndReturnMarketAllocation(uint256,uint256)": {
        "notice": "Calculates and updates the yield allocation to the treasury and the market"
      },
      "removePaymentTokenFromMarket(uint256)": {
        "notice": "Withdraws the given amount of tokens from this yield manager."
      },
      "totalReservedForTreasury()": {
        "notice": "distributed yield not yet transferred to the treasury"
      },
      "transferPaymentTokensToUser(address,uint256)": {
        "notice": "Allows the LongShort pay out a user from tokens already withdrawn from Aave"
      },
      "withdrawTreasuryFunds()": {
        "notice": "Withdraw treasury allocated accrued yield from the lending pool to the treasury contract"
      }
    },
    "notice": "Manages yield accumulation for the LongShort contract. Each market is deployed with its own yield manager to simplify the bookkeeping, as different markets may share a payment token and yield pool.",
    "version": 1
  }
}