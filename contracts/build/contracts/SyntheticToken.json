{
  "contractName": "SyntheticToken",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_longShort",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_staker",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_marketIndex",
          "type": "uint32"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "PAUSER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isLong",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "longShort",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "marketIndex",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "staker",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_longShort\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_marketIndex\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isLong\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"longShort\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketIndex\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"staker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Logic for price tracking contained in LongShort.sol.  The contract inherits from ERC20PresetMinterPauser.sol\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"To automatically account for next price actions which have been confirmed but not settled, includes any outstanding tokens owed by longShort.\",\"params\":{\"account\":\"The address for which to get the balance of.\"}},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"constructor\":{\"details\":\"Should only be called by TokenFactory.sol for our system.\",\"params\":{\"_isLong\":\"Whether the token is long or short for its market.\",\"_longShort\":\"Address of the core LongShort contract.\",\"_marketIndex\":\"Which market the token is for.\",\"_staker\":\"Address of the staker contract.\",\"name\":\"The name of the token.\",\"symbol\":\"The symbol for the token.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Overload {grantRole} to track enumerable memberships\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"Can only be called by addresses with a minter role.  This should correspond to the Long Short contract.\",\"params\":{\"amount\":\"Amount of synthetic tokens to mint in wei.\",\"to\":\"The address for which to mint the tokens for.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"pause()\":{\"details\":\"Pauses all token transfers. See {ERC20Pausable} and {Pausable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Overload {renounceRole} to track enumerable memberships\"},\"revokeRole(bytes32,address)\":{\"details\":\"Overload {revokeRole} to track enumerable memberships\"},\"stake(uint256)\":{\"details\":\"Core staking logic contained in Staker.sol\",\"params\":{\"amount\":\"Amount to stake in wei.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"To allow users to avoid approving LongShort.sol when redeeming tokens, longShort has a virtual infinite allowance when transfering tokens to itself.\",\"params\":{\"amount\":\"Amount of tokens to transfer in wei.\",\"recipient\":\"Recipient of the transferred tokens.\",\"sender\":\"User for which to transfer tokens.\"}},\"unpause()\":{\"details\":\"Unpauses all token transfers. See {ERC20Pausable} and {Pausable-_unpause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"}},\"title\":\"SyntheticToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balanceOf(address)\":{\"notice\":\"Gets the synthetic token balance of the user in wei.\"},\"constructor\":{\"notice\":\"Creates an instance of the contract.\"},\"isLong()\":{\"notice\":\"Whether the token is a long token or short token for its market.\"},\"longShort()\":{\"notice\":\"Address of the LongShort contract, a deployed LongShort.sol\"},\"marketIndex()\":{\"notice\":\"Identifies which market in longShort the token is for.\"},\"mint(address,uint256)\":{\"notice\":\"Mints a number of synthetic tokens for an address.\"},\"stake(uint256)\":{\"notice\":\"Allows users to stake their synthetic tokens to earn Float.\"},\"staker()\":{\"notice\":\"Address of the Staker contract, a deployed Staker.sol\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Overrides the default ERC20 transferFrom.\"}},\"notice\":\"An ERC20 token that tracks or inversely tracks the price of an underlying asset with floating exposure.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/jasoons/Documents/code/monorepo/contracts/contracts/SyntheticToken.sol\":\"SyntheticToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/jasoons/Documents/code/monorepo/contracts/contracts/SyntheticToken.sol\":{\"keccak256\":\"0xef7f880b25a79395c1f513d85dd233ee1e41518d5205f66b7240958a18c988e4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d5dbafdccadb81dd9ccb2d4c4df878caba5a3a433d2826650fda8c3dd974dd41\",\"dweb:/ipfs/QmRQ92wxhhV3U1dpQviwbCm56LKrMBhnxFKhTDfdoKXKwf\"]},\"/home/jasoons/Documents/code/monorepo/contracts/contracts/interfaces/ILongShort.sol\":{\"keccak256\":\"0x7e13209002a3af189fbe881630050275520147ce431ca21a27d8e5dcf137f33e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d52af894069ba8277c3828b31884784b5b7cc2e13d17a3a6e9ba7de55a3227d5\",\"dweb:/ipfs/QmVGULSszYCp2yUC3dM5H45dGAcJFB8kFkTzKrkvbRKC7p\"]},\"/home/jasoons/Documents/code/monorepo/contracts/contracts/interfaces/IStaker.sol\":{\"keccak256\":\"0xde8f223884a5ac8e5991b087f395fdc2c7924889414eacb487e16ed8d864e578\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://845981474ffca1a248beaed12fbd1efbcf6790bd03f0181d9964495f96fff592\",\"dweb:/ipfs/QmcXuwrJKy8iVTW2LK9V5FmQ7mRjqeSFuaw3uvtMQb8HRx\"]},\"/home/jasoons/Documents/code/monorepo/contracts/contracts/interfaces/ISyntheticToken.sol\":{\"keccak256\":\"0x23c0c16132833fa2a76990911b39786950bcee051a9e5a9ad6a1cadaf63b74ea\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c3918e04e94015b006bbcf0c9b5c4974995c9fd54e9737bd31d12f2c81e22ec3\",\"dweb:/ipfs/QmPvCvfSXFzkLfNp3uE5aAtdo5CRDXa6WquoBuUKibC8ze\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x98fac37221212c8f126f198d262a4df86394bd1a9969f61e40739fe8ac013dd8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62f98a3c51ff54e1d19c8845da55415c85b4f28c81c0c3b1361eb6eaa905a0c6\",\"dweb:/ipfs/QmTZxiScs2HXZRtscWGjBBXmG4qeFGk1Bq8FGzhbWi1wr3\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x0d616363c1a1e6f9f489303f94df0cbe606826ab4944d315c3801a07f9b8d4ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://976cf80d02556929369fc98196c4082f204e44e682e20d3f65cc61b31e29bf76\",\"dweb:/ipfs/Qmeo1vvf7L3PLLDPNSVuVyirLB3FrCYKMFw3JZ7EXgC5YU\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xab1f67e4c96dfe0e3875d22883c3dee5411914f40ce0c54ef407f030d803512e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b651c0571e3ecc124b3af7a598357a19406969b21b8a3fa06eeaf5e5c9150d6c\",\"dweb:/ipfs/QmPfcAhbGVfsSd7VKet77fuST397b7XSFU2myXxLdok79v\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xfeccdcbf67b2006a715e5af1a4c7556004d95b2806552b5cc54e46e8eb7e887b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45b1f9043c0fb450272f20ed19ef633fcba1b129d602651a856dfae1a2243a2c\",\"dweb:/ipfs/QmUTSQiDikkcNtTtyDpkEwCM5ztVUUh9c1inBukn6HC5Vr\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0xb8cc16fa5514ccbff1123c566ec0a21682f1ded0ca7e5df719c6bd0b7429390a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80a57501e3b11616e3e252ee40b4479dc09f831a9aaf83224179eb1ccd54b7eb\",\"dweb:/ipfs/QmZcREGkEbu9NoMiYXrXdJBAWNfeC41uM13rFaVL9VQafS\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x86b0abb859d38e6909101e8dce6fad76543cd1443788b049fd182379b42cb6e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90b057ad3b90ede81cefcc6f46d08a55b1f3b0f89638e21499221fea2aed3304\",\"dweb:/ipfs/QmYwVSzxHm7pX5ANvWhJG1JUP64BL8VWnozfpeQQNwFtp3\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol\":{\"keccak256\":\"0xca9e98786cd7d8060e08a9f5aaf6dbd7da9d51afe3232c06c5a49ea49490c789\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://355eccc0746e3d44001d248077efece51418d44b226d27de33930ff03ebd8103\",\"dweb:/ipfs/QmcMZjhmDVuiF1AWLEnbUAzuq2RMZVQP1ChoZV63bU8EgE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x456e9b3a2bfe189b5249857f624f4139e59331db518483b456c4e587a20552e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1123c9545decc48a011370ebab4bf53dda98524fa21f9498e68851ba8f0ffc0f\",\"dweb:/ipfs/QmUpgMg8EFDnv87ePKUjXxXpJT3qwHRj9VDNSnRxu7T9sy\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x4878ef6c288f4cef3c2a288d32cc548c648831cc55503ad3d9a581ed3b93aad9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff1bdcc04ffc6b0a39e76ca4d8c09fb36927c2355008294db28096c1bd9ef544\",\"dweb:/ipfs/QmSNmMUxcuQ9i6U1PVcd14gTCEYmFgkjPg3anzDckGhVRS\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620022783803806200227883398101604081905262000034916200041f565b85858181816005908051906020019062000050929190620002a9565b50805162000066906006906020840190620002a9565b50506007805460ff1916905550620000816000335b62000144565b620000ad7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6336200007b565b620000d97f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a336200007b565b5050600780546001600160a01b0395861661010002610100600160a81b031990911617905560088054911515600160c01b0260ff60c01b1963ffffffff909416600160a01b026001600160c01b03199093169490951693909317171691909117905550620005339050565b6200015b82826200018760201b62000af81760201c565b60008281526001602090815260409091206200018291839062000b0262000197821b17901c565b505050565b620001938282620001b7565b5050565b6000620001ae836001600160a01b03841662000257565b90505b92915050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000193576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620002133390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000818152600183016020526040812054620002a057508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155620001b1565b506000620001b1565b828054620002b790620004e0565b90600052602060002090601f016020900481019282620002db576000855562000326565b82601f10620002f657805160ff191683800117855562000326565b8280016001018555821562000326579182015b828111156200032657825182559160200191906001019062000309565b506200033492915062000338565b5090565b5b8082111562000334576000815560010162000339565b80516001600160a01b03811681146200036757600080fd5b919050565b600082601f8301126200037d578081fd5b81516001600160401b03808211156200039a576200039a6200051d565b604051601f8301601f19908116603f01168101908282118183101715620003c557620003c56200051d565b81604052838152602092508683858801011115620003e1578485fd5b8491505b83821015620004045785820183015181830184015290820190620003e5565b838211156200041557848385830101525b9695505050505050565b60008060008060008060c0878903121562000438578182fd5b86516001600160401b03808211156200044f578384fd5b6200045d8a838b016200036c565b9750602089015191508082111562000473578384fd5b506200048289828a016200036c565b95505062000493604088016200034f565b9350620004a3606088016200034f565b9250608087015163ffffffff81168114620004bc578283fd5b60a08801519092508015158114620004d2578182fd5b809150509295509295509295565b600181811c90821680620004f557607f821691505b602082108114156200051757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b611d3580620005436000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80635ebaf1db1161011a578063a217fddf116100ad578063ca15c8731161007c578063ca15c8731461043b578063d53913931461044e578063d547741f14610475578063dd62ed3e14610488578063e63ab1e9146104c1576101fb565b8063a217fddf146103fa578063a457c2d714610402578063a694fc3a14610415578063a9059cbb14610428576101fb565b80638c7adc15116100e95780638c7adc15146103a05780639010d07c146103cc57806391d14854146103df57806395d89b41146103f2576101fb565b80635ebaf1db1461035f57806370a082311461037257806379cc6790146103855780638456cb5914610398576101fb565b80632f2ff15d116101925780633f4ba83a116101615780633f4ba83a1461032657806340c10f191461032e57806342966c68146103415780635c975abb14610354576101fb565b80632f2ff15d146102dc578063313ce567146102f157806336568abe146103005780633950935114610313576101fb565b8063202a61a1116101ce578063202a61a11461026257806323b872dd14610276578063248a9ca31461028957806329949872146102ac576101fb565b806301ffc9a71461020057806306fdde0314610228578063095ea7b31461023d57806318160ddd14610250575b600080fd5b61021361020e366004611b31565b6104e8565b60405190151581526020015b60405180910390f35b610230610515565b60405161021f9190611be6565b61021361024b366004611aad565b6105a7565b6004545b60405190815260200161021f565b60085461021390600160c01b900460ff1681565b610213610284366004611a72565b6105be565b610254610297366004611ad6565b60009081526020819052604090206001015490565b6007546102c49061010090046001600160a01b031681565b6040516001600160a01b03909116815260200161021f565b6102ef6102ea366004611aee565b61061f565b005b6040516012815260200161021f565b6102ef61030e366004611aee565b610646565b610213610321366004611aad565b610668565b6102ef6106a4565b6102ef61033c366004611aad565b61074f565b6102ef61034f366004611ad6565b61075d565b60075460ff16610213565b6008546102c4906001600160a01b031681565b610254610380366004611a26565b61076a565b6102ef610393366004611aad565b610839565b6102ef6108bc565b6008546103b790600160a01b900463ffffffff1681565b60405163ffffffff909116815260200161021f565b6102c46103da366004611b10565b610960565b6102136103ed366004611aee565b610978565b6102306109a1565b610254600081565b610213610410366004611aad565b6109b0565b6102ef610423366004611ad6565b610a4b565b610213610436366004611aad565b610aca565b610254610449366004611ad6565b610ad7565b6102547f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6102ef610483366004611aee565b610aee565b610254610496366004611a40565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b6102547f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b60006001600160e01b03198216635a05180f60e01b148061050d575061050d82610b17565b90505b919050565b60606005805461052490611cae565b80601f016020809104026020016040519081016040528092919081815260200182805461055090611cae565b801561059d5780601f106105725761010080835404028352916020019161059d565b820191906000526020600020905b81548152906001019060200180831161058057829003601f168201915b5050505050905090565b60006105b4338484610b4c565b5060015b92915050565b6007546000906001600160a01b03848116610100909204161480156105f2575060075461010090046001600160a01b031633145b1561060a57610602848484610c71565b506001610618565b610615848484610e54565b90505b9392505050565b6106298282610f00565b60008281526001602052604090206106419082610b02565b505050565b6106508282610f27565b60008281526001602052604090206106419082610fa1565b3360008181526003602090815260408083206001600160a01b038716845290915281205490916105b491859061069f908690611c19565b610b4c565b6106ce7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a336103ed565b6107455760405162461bcd60e51b815260206004820152603960248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f20756e70617573650000000000000060648201526084015b60405180910390fd5b61074d610fb6565b565b6107598282611049565b5050565b61076733826110e8565b50565b60075460085460405163f68a327f60e01b81526001600160a01b038481166004830152600160a01b830463ffffffff166024830152600160c01b90920460ff161515604482015260009261010090049091169063f68a327f9060640160206040518083038186803b1580156107de57600080fd5b505afa1580156107f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108169190611b59565b6001600160a01b03831660009081526002602052604090205461050d9190611c19565b60006108458333610496565b9050818110156108a35760405162461bcd60e51b8152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604482015263616e636560e01b606482015260840161073c565b6108b2833361069f8585611c50565b61064183836110e8565b6108e67f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a336103ed565b6109585760405162461bcd60e51b815260206004820152603760248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f207061757365000000000000000000606482015260840161073c565b61074d611151565b600082815260016020526040812061061890836111cc565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60606006805461052490611cae565b3360009081526003602090815260408083206001600160a01b038616845290915281205482811015610a325760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161073c565b610a41338561069f8685611c50565b5060019392505050565b600854610a639033906001600160a01b031683610c71565b6008546040516373479edf60e11b8152336004820152602481018390526001600160a01b039091169063e68f3dbe90604401600060405180830381600087803b158015610aaf57600080fd5b505af1158015610ac3573d6000803e3d6000fd5b5050505050565b60006105b4338484610c71565b600081815260016020526040812061050d906111d8565b61065082826111e2565b6107598282611208565b6000610618836001600160a01b03841661128c565b60006001600160e01b03198216637965db0b60e01b148061050d57506301ffc9a760e01b6001600160e01b031983161461050d565b6001600160a01b038316610bae5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161073c565b6001600160a01b038216610c0f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161073c565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038316610cd55760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161073c565b6001600160a01b038216610d375760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161073c565b610d428383836112db565b6001600160a01b03831660009081526002602052604090205481811015610dba5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161073c565b610dc48282611c50565b6001600160a01b038086166000908152600260205260408082209390935590851681529081208054849290610dfa908490611c19565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e4691815260200190565b60405180910390a350505050565b6000610e61848484610c71565b6001600160a01b038416600090815260036020908152604080832033845290915290205482811015610ee65760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b606482015260840161073c565b610ef5853361069f8685611c50565b506001949350505050565b600082815260208190526040902060010154610f1d81335b611373565b6106418383611208565b6001600160a01b0381163314610f975760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b606482015260840161073c565b61075982826113d7565b6000610618836001600160a01b03841661143c565b60075460ff16610fff5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161073c565b6007805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6110737f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6336103ed565b6110de5760405162461bcd60e51b815260206004820152603660248201527f45524332305072657365744d696e7465725061757365723a206d7573742068616044820152751d99481b5a5b9d195c881c9bdb19481d1bc81b5a5b9d60521b606482015260840161073c565b6107598282611553565b60075461010090046001600160a01b031633146111475760405162461bcd60e51b815260206004820152601760248201527f4f6e6c79204c6f6e6753686f727420636f6e7472616374000000000000000000604482015260640161073c565b610759828261163e565b60075460ff16156111975760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161073c565b6007805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861102c3390565b60006106188383611799565b600061050d825490565b6000828152602081905260409020600101546111fe8133610f18565b61064183836113d7565b6112128282610978565b610759576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556112483390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60008181526001830160205260408120546112d3575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556105b8565b5060006105b8565b6007546001600160a01b038481166101009092041614610641576007546008546040516344bd03c360e11b81526001600160a01b038681166004830152600160a01b90920463ffffffff166024820152610100909204169063897a078690604401600060405180830381600087803b15801561135657600080fd5b505af115801561136a573d6000803e3d6000fd5b50505050505050565b61137d8282610978565b61075957611395816001600160a01b0316601461182d565b6113a083602061182d565b6040516020016113b1929190611b71565b60408051601f198184030181529082905262461bcd60e51b825261073c91600401611be6565b6113e18282610978565b15610759576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60008181526001830160205260408120548015611549576000611460600183611c50565b855490915060009061147490600190611c50565b9050600086600001828154811061149b57634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050808760000184815481106114cc57634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101929092558281526001890190915260409020849055865487908061150d57634e487b7160e01b600052603160045260246000fd5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506105b8565b60009150506105b8565b6001600160a01b0382166115a95760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161073c565b6115b5600083836112db565b80600460008282546115c79190611c19565b90915550506001600160a01b038216600090815260026020526040812080548392906115f4908490611c19565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b03821661169e5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161073c565b6116aa826000836112db565b6001600160a01b0382166000908152600260205260409020548181101561171e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161073c565b6117288282611c50565b6001600160a01b03841660009081526002602052604081209190915560048054849290611756908490611c50565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610c64565b815460009082106117f75760405162461bcd60e51b815260206004820152602260248201527f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e604482015261647360f01b606482015260840161073c565b82600001828154811061181a57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b6060600061183c836002611c31565b611847906002611c19565b67ffffffffffffffff81111561186d57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611897576020820181803683370190505b509050600360fc1b816000815181106118c057634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106118fd57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000611921846002611c31565b61192c906001611c19565b90505b60018111156119c0576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061196e57634e487b7160e01b600052603260045260246000fd5b1a60f81b82828151811061199257634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c936119b981611c97565b905061192f565b5083156106185760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161073c565b80356001600160a01b038116811461051057600080fd5b600060208284031215611a37578081fd5b61061882611a0f565b60008060408385031215611a52578081fd5b611a5b83611a0f565b9150611a6960208401611a0f565b90509250929050565b600080600060608486031215611a86578081fd5b611a8f84611a0f565b9250611a9d60208501611a0f565b9150604084013590509250925092565b60008060408385031215611abf578182fd5b611ac883611a0f565b946020939093013593505050565b600060208284031215611ae7578081fd5b5035919050565b60008060408385031215611b00578182fd5b82359150611a6960208401611a0f565b60008060408385031215611b22578182fd5b50508035926020909101359150565b600060208284031215611b42578081fd5b81356001600160e01b031981168114610618578182fd5b600060208284031215611b6a578081fd5b5051919050565b60007f416363657373436f6e74726f6c3a206163636f756e742000000000000000000082528351611ba9816017850160208801611c67565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611bda816028840160208801611c67565b01602801949350505050565b6000602082528251806020840152611c05816040850160208701611c67565b601f01601f19169190910160400192915050565b60008219821115611c2c57611c2c611ce9565b500190565b6000816000190483118215151615611c4b57611c4b611ce9565b500290565b600082821015611c6257611c62611ce9565b500390565b60005b83811015611c82578181015183820152602001611c6a565b83811115611c91576000848401525b50505050565b600081611ca657611ca6611ce9565b506000190190565b600181811c90821680611cc257607f821691505b60208210811415611ce357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212201e97441335853ea572ba81bb1558db950822d1be98c132b4d2bbe0537e5ebae564736f6c63430008030033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101fb5760003560e01c80635ebaf1db1161011a578063a217fddf116100ad578063ca15c8731161007c578063ca15c8731461043b578063d53913931461044e578063d547741f14610475578063dd62ed3e14610488578063e63ab1e9146104c1576101fb565b8063a217fddf146103fa578063a457c2d714610402578063a694fc3a14610415578063a9059cbb14610428576101fb565b80638c7adc15116100e95780638c7adc15146103a05780639010d07c146103cc57806391d14854146103df57806395d89b41146103f2576101fb565b80635ebaf1db1461035f57806370a082311461037257806379cc6790146103855780638456cb5914610398576101fb565b80632f2ff15d116101925780633f4ba83a116101615780633f4ba83a1461032657806340c10f191461032e57806342966c68146103415780635c975abb14610354576101fb565b80632f2ff15d146102dc578063313ce567146102f157806336568abe146103005780633950935114610313576101fb565b8063202a61a1116101ce578063202a61a11461026257806323b872dd14610276578063248a9ca31461028957806329949872146102ac576101fb565b806301ffc9a71461020057806306fdde0314610228578063095ea7b31461023d57806318160ddd14610250575b600080fd5b61021361020e366004611b31565b6104e8565b60405190151581526020015b60405180910390f35b610230610515565b60405161021f9190611be6565b61021361024b366004611aad565b6105a7565b6004545b60405190815260200161021f565b60085461021390600160c01b900460ff1681565b610213610284366004611a72565b6105be565b610254610297366004611ad6565b60009081526020819052604090206001015490565b6007546102c49061010090046001600160a01b031681565b6040516001600160a01b03909116815260200161021f565b6102ef6102ea366004611aee565b61061f565b005b6040516012815260200161021f565b6102ef61030e366004611aee565b610646565b610213610321366004611aad565b610668565b6102ef6106a4565b6102ef61033c366004611aad565b61074f565b6102ef61034f366004611ad6565b61075d565b60075460ff16610213565b6008546102c4906001600160a01b031681565b610254610380366004611a26565b61076a565b6102ef610393366004611aad565b610839565b6102ef6108bc565b6008546103b790600160a01b900463ffffffff1681565b60405163ffffffff909116815260200161021f565b6102c46103da366004611b10565b610960565b6102136103ed366004611aee565b610978565b6102306109a1565b610254600081565b610213610410366004611aad565b6109b0565b6102ef610423366004611ad6565b610a4b565b610213610436366004611aad565b610aca565b610254610449366004611ad6565b610ad7565b6102547f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6102ef610483366004611aee565b610aee565b610254610496366004611a40565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b6102547f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b60006001600160e01b03198216635a05180f60e01b148061050d575061050d82610b17565b90505b919050565b60606005805461052490611cae565b80601f016020809104026020016040519081016040528092919081815260200182805461055090611cae565b801561059d5780601f106105725761010080835404028352916020019161059d565b820191906000526020600020905b81548152906001019060200180831161058057829003601f168201915b5050505050905090565b60006105b4338484610b4c565b5060015b92915050565b6007546000906001600160a01b03848116610100909204161480156105f2575060075461010090046001600160a01b031633145b1561060a57610602848484610c71565b506001610618565b610615848484610e54565b90505b9392505050565b6106298282610f00565b60008281526001602052604090206106419082610b02565b505050565b6106508282610f27565b60008281526001602052604090206106419082610fa1565b3360008181526003602090815260408083206001600160a01b038716845290915281205490916105b491859061069f908690611c19565b610b4c565b6106ce7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a336103ed565b6107455760405162461bcd60e51b815260206004820152603960248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f20756e70617573650000000000000060648201526084015b60405180910390fd5b61074d610fb6565b565b6107598282611049565b5050565b61076733826110e8565b50565b60075460085460405163f68a327f60e01b81526001600160a01b038481166004830152600160a01b830463ffffffff166024830152600160c01b90920460ff161515604482015260009261010090049091169063f68a327f9060640160206040518083038186803b1580156107de57600080fd5b505afa1580156107f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108169190611b59565b6001600160a01b03831660009081526002602052604090205461050d9190611c19565b60006108458333610496565b9050818110156108a35760405162461bcd60e51b8152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604482015263616e636560e01b606482015260840161073c565b6108b2833361069f8585611c50565b61064183836110e8565b6108e67f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a336103ed565b6109585760405162461bcd60e51b815260206004820152603760248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f207061757365000000000000000000606482015260840161073c565b61074d611151565b600082815260016020526040812061061890836111cc565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60606006805461052490611cae565b3360009081526003602090815260408083206001600160a01b038616845290915281205482811015610a325760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161073c565b610a41338561069f8685611c50565b5060019392505050565b600854610a639033906001600160a01b031683610c71565b6008546040516373479edf60e11b8152336004820152602481018390526001600160a01b039091169063e68f3dbe90604401600060405180830381600087803b158015610aaf57600080fd5b505af1158015610ac3573d6000803e3d6000fd5b5050505050565b60006105b4338484610c71565b600081815260016020526040812061050d906111d8565b61065082826111e2565b6107598282611208565b6000610618836001600160a01b03841661128c565b60006001600160e01b03198216637965db0b60e01b148061050d57506301ffc9a760e01b6001600160e01b031983161461050d565b6001600160a01b038316610bae5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161073c565b6001600160a01b038216610c0f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161073c565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038316610cd55760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161073c565b6001600160a01b038216610d375760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161073c565b610d428383836112db565b6001600160a01b03831660009081526002602052604090205481811015610dba5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161073c565b610dc48282611c50565b6001600160a01b038086166000908152600260205260408082209390935590851681529081208054849290610dfa908490611c19565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e4691815260200190565b60405180910390a350505050565b6000610e61848484610c71565b6001600160a01b038416600090815260036020908152604080832033845290915290205482811015610ee65760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b606482015260840161073c565b610ef5853361069f8685611c50565b506001949350505050565b600082815260208190526040902060010154610f1d81335b611373565b6106418383611208565b6001600160a01b0381163314610f975760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b606482015260840161073c565b61075982826113d7565b6000610618836001600160a01b03841661143c565b60075460ff16610fff5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161073c565b6007805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6110737f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6336103ed565b6110de5760405162461bcd60e51b815260206004820152603660248201527f45524332305072657365744d696e7465725061757365723a206d7573742068616044820152751d99481b5a5b9d195c881c9bdb19481d1bc81b5a5b9d60521b606482015260840161073c565b6107598282611553565b60075461010090046001600160a01b031633146111475760405162461bcd60e51b815260206004820152601760248201527f4f6e6c79204c6f6e6753686f727420636f6e7472616374000000000000000000604482015260640161073c565b610759828261163e565b60075460ff16156111975760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161073c565b6007805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861102c3390565b60006106188383611799565b600061050d825490565b6000828152602081905260409020600101546111fe8133610f18565b61064183836113d7565b6112128282610978565b610759576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556112483390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60008181526001830160205260408120546112d3575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556105b8565b5060006105b8565b6007546001600160a01b038481166101009092041614610641576007546008546040516344bd03c360e11b81526001600160a01b038681166004830152600160a01b90920463ffffffff166024820152610100909204169063897a078690604401600060405180830381600087803b15801561135657600080fd5b505af115801561136a573d6000803e3d6000fd5b50505050505050565b61137d8282610978565b61075957611395816001600160a01b0316601461182d565b6113a083602061182d565b6040516020016113b1929190611b71565b60408051601f198184030181529082905262461bcd60e51b825261073c91600401611be6565b6113e18282610978565b15610759576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60008181526001830160205260408120548015611549576000611460600183611c50565b855490915060009061147490600190611c50565b9050600086600001828154811061149b57634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050808760000184815481106114cc57634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101929092558281526001890190915260409020849055865487908061150d57634e487b7160e01b600052603160045260246000fd5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506105b8565b60009150506105b8565b6001600160a01b0382166115a95760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161073c565b6115b5600083836112db565b80600460008282546115c79190611c19565b90915550506001600160a01b038216600090815260026020526040812080548392906115f4908490611c19565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b03821661169e5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161073c565b6116aa826000836112db565b6001600160a01b0382166000908152600260205260409020548181101561171e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161073c565b6117288282611c50565b6001600160a01b03841660009081526002602052604081209190915560048054849290611756908490611c50565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610c64565b815460009082106117f75760405162461bcd60e51b815260206004820152602260248201527f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e604482015261647360f01b606482015260840161073c565b82600001828154811061181a57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b6060600061183c836002611c31565b611847906002611c19565b67ffffffffffffffff81111561186d57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611897576020820181803683370190505b509050600360fc1b816000815181106118c057634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106118fd57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000611921846002611c31565b61192c906001611c19565b90505b60018111156119c0576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061196e57634e487b7160e01b600052603260045260246000fd5b1a60f81b82828151811061199257634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c936119b981611c97565b905061192f565b5083156106185760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161073c565b80356001600160a01b038116811461051057600080fd5b600060208284031215611a37578081fd5b61061882611a0f565b60008060408385031215611a52578081fd5b611a5b83611a0f565b9150611a6960208401611a0f565b90509250929050565b600080600060608486031215611a86578081fd5b611a8f84611a0f565b9250611a9d60208501611a0f565b9150604084013590509250925092565b60008060408385031215611abf578182fd5b611ac883611a0f565b946020939093013593505050565b600060208284031215611ae7578081fd5b5035919050565b60008060408385031215611b00578182fd5b82359150611a6960208401611a0f565b60008060408385031215611b22578182fd5b50508035926020909101359150565b600060208284031215611b42578081fd5b81356001600160e01b031981168114610618578182fd5b600060208284031215611b6a578081fd5b5051919050565b60007f416363657373436f6e74726f6c3a206163636f756e742000000000000000000082528351611ba9816017850160208801611c67565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611bda816028840160208801611c67565b01602801949350505050565b6000602082528251806020840152611c05816040850160208701611c67565b601f01601f19169190910160400192915050565b60008219821115611c2c57611c2c611ce9565b500190565b6000816000190483118215151615611c4b57611c4b611ce9565b500290565b600082821015611c6257611c62611ce9565b500390565b60005b83811015611c82578181015183820152602001611c6a565b83811115611c91576000848401525b50505050565b600081611ca657611ca6611ce9565b506000190190565b600181811c90821680611cc257607f821691505b60208210811415611ce357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212201e97441335853ea572ba81bb1558db950822d1be98c132b4d2bbe0537e5ebae564736f6c63430008030033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2733:74",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:74",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "74:117:74",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "84:22:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "99:6:74"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "93:5:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "93:13:74"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "84:5:74"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "169:16:74",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "178:1:74",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "181:1:74",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "171:6:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "171:12:74"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "171:12:74"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "128:5:74"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "139:5:74"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "154:3:74",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "159:1:74",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "150:3:74"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "150:11:74"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "163:1:74",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "146:3:74"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "146:19:74"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "135:3:74"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "135:31:74"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "125:2:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:42:74"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "118:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "118:50:74"
                  },
                  "nodeType": "YulIf",
                  "src": "115:2:74"
                }
              ]
            },
            "name": "abi_decode_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "53:6:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:74",
                "type": ""
              }
            ],
            "src": "14:177:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "260:845:74",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "309:24:74",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "318:5:74"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "325:5:74"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "311:6:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "311:20:74"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "311:20:74"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "288:6:74"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "296:4:74",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "284:3:74"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "284:17:74"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "303:3:74"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "280:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "280:27:74"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "273:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "273:35:74"
                  },
                  "nodeType": "YulIf",
                  "src": "270:2:74"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "342:23:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "358:6:74"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "352:5:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "352:13:74"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "346:2:74",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "374:28:74",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "392:2:74",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "396:1:74",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "388:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "388:10:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "400:1:74",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "384:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "384:18:74"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "378:2:74",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "425:22:74",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "427:16:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "427:18:74"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "427:18:74"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "417:2:74"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "421:2:74"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "414:2:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "414:10:74"
                  },
                  "nodeType": "YulIf",
                  "src": "411:2:74"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "456:17:74",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "470:2:74",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "466:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "466:7:74"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "460:2:74",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "482:23:74",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "502:2:74",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "496:5:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "496:9:74"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "486:6:74",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "514:71:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "536:6:74"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "560:2:74"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "564:4:74",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "556:3:74"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "556:13:74"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "571:2:74"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "552:3:74"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "552:22:74"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "576:2:74",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "548:3:74"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "548:31:74"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "581:2:74"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "544:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "544:40:74"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "532:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:53:74"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "518:10:74",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "644:22:74",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "646:16:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "646:18:74"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "646:18:74"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "603:10:74"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "615:2:74"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "600:2:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "600:18:74"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "623:10:74"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "635:6:74"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "620:2:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "620:22:74"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "597:2:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "597:46:74"
                  },
                  "nodeType": "YulIf",
                  "src": "594:2:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "682:2:74",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "686:10:74"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "675:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "675:22:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "675:22:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "713:6:74"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "721:2:74"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "706:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "706:18:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "706:18:74"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "733:14:74",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "743:4:74",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "737:2:74",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "793:24:74",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "802:5:74"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "809:5:74"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "795:6:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "795:20:74"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "795:20:74"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "770:6:74"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "778:2:74"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "766:3:74"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "766:15:74"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "783:2:74"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "762:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "762:24:74"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "788:3:74"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "759:2:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "759:33:74"
                  },
                  "nodeType": "YulIf",
                  "src": "756:2:74"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "826:14:74",
                  "value": {
                    "name": "array",
                    "nodeType": "YulIdentifier",
                    "src": "835:5:74"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "830:1:74",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "895:87:74",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "memPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "924:6:74"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "932:1:74"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "920:3:74"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "920:14:74"
                                },
                                {
                                  "name": "_4",
                                  "nodeType": "YulIdentifier",
                                  "src": "936:2:74"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "916:3:74"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "916:23:74"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "offset",
                                          "nodeType": "YulIdentifier",
                                          "src": "955:6:74"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "963:1:74"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "951:3:74"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "951:14:74"
                                    },
                                    {
                                      "name": "_4",
                                      "nodeType": "YulIdentifier",
                                      "src": "967:2:74"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "947:3:74"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "947:23:74"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "941:5:74"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "941:30:74"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "909:6:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "909:63:74"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "909:63:74"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "860:1:74"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "863:2:74"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "857:2:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "857:9:74"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "867:19:74",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "869:15:74",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "878:1:74"
                            },
                            {
                              "name": "_4",
                              "nodeType": "YulIdentifier",
                              "src": "881:2:74"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "874:3:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "874:10:74"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "869:1:74"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "853:3:74",
                    "statements": []
                  },
                  "src": "849:133:74"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1012:63:74",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "memPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "1041:6:74"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "1049:2:74"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1037:3:74"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1037:15:74"
                                },
                                {
                                  "name": "_4",
                                  "nodeType": "YulIdentifier",
                                  "src": "1054:2:74"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1033:3:74"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1033:24:74"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "1059:5:74"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1026:6:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1026:39:74"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1026:39:74"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "997:1:74"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1000:2:74"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "994:2:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "994:9:74"
                  },
                  "nodeType": "YulIf",
                  "src": "991:2:74"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1084:15:74",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1093:6:74"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "1084:5:74"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_string_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "234:6:74",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "242:3:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "250:5:74",
                "type": ""
              }
            ],
            "src": "196:909:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1292:922:74",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1339:26:74",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1348:6:74"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1356:6:74"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1341:6:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1341:22:74"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1341:22:74"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1313:7:74"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1322:9:74"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1309:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1309:23:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1334:3:74",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1305:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1305:33:74"
                  },
                  "nodeType": "YulIf",
                  "src": "1302:2:74"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1374:30:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1394:9:74"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1388:5:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1388:16:74"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1378:6:74",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1413:28:74",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1431:2:74",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1435:1:74",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1427:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1427:10:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1439:1:74",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1423:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1423:18:74"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1417:2:74",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1468:26:74",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1477:6:74"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1485:6:74"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1470:6:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1470:22:74"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1470:22:74"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1456:6:74"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1464:2:74"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1453:2:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1453:14:74"
                  },
                  "nodeType": "YulIf",
                  "src": "1450:2:74"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1503:71:74",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1546:9:74"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1557:6:74"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1542:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1542:22:74"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1566:7:74"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1513:28:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1513:61:74"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1503:6:74"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1583:41:74",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1609:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1620:2:74",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1605:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1605:18:74"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1599:5:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1599:25:74"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "1587:8:74",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1653:26:74",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1662:6:74"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1670:6:74"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1655:6:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1655:22:74"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1655:22:74"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "1639:8:74"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1649:2:74"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1636:2:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1636:16:74"
                  },
                  "nodeType": "YulIf",
                  "src": "1633:2:74"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1688:73:74",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1731:9:74"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "1742:8:74"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1727:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1727:24:74"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1753:7:74"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1698:28:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1698:63:74"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1688:6:74"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1770:59:74",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1814:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1825:2:74",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1810:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1810:18:74"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1780:29:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1780:49:74"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1770:6:74"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1838:59:74",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1882:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1893:2:74",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1878:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1878:18:74"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1848:29:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1848:49:74"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1838:6:74"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1906:39:74",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1929:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1940:3:74",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1925:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1925:19:74"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1919:5:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1919:26:74"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1910:5:74",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1999:26:74",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2008:6:74"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2016:6:74"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2001:6:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2001:22:74"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2001:22:74"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1967:5:74"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1978:5:74"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1985:10:74",
                                "type": "",
                                "value": "0xffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1974:3:74"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1974:22:74"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1964:2:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1964:33:74"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1957:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1957:41:74"
                  },
                  "nodeType": "YulIf",
                  "src": "1954:2:74"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2034:15:74",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2044:5:74"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "2034:6:74"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2058:41:74",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2083:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2094:3:74",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2079:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2079:19:74"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2073:5:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2073:26:74"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "2062:7:74",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2156:26:74",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value5",
                              "nodeType": "YulIdentifier",
                              "src": "2165:6:74"
                            },
                            {
                              "name": "value5",
                              "nodeType": "YulIdentifier",
                              "src": "2173:6:74"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2158:6:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2158:22:74"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2158:22:74"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "2121:7:74"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2144:7:74"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2137:6:74"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2137:15:74"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2130:6:74"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2130:23:74"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2118:2:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2118:36:74"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2111:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2111:44:74"
                  },
                  "nodeType": "YulIf",
                  "src": "2108:2:74"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2191:17:74",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "2201:7:74"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "2191:6:74"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_addresst_uint32t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1218:9:74",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1229:7:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1241:6:74",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1249:6:74",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1257:6:74",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1265:6:74",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1273:6:74",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "1281:6:74",
                "type": ""
              }
            ],
            "src": "1110:1104:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2274:325:74",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2284:22:74",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2298:1:74",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2301:4:74"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "2294:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2294:12:74"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "2284:6:74"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2315:38:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2345:4:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2351:1:74",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2341:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2341:12:74"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "2319:18:74",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2392:31:74",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2394:27:74",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "2408:6:74"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2416:4:74",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "2404:3:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2404:17:74"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2394:6:74"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2372:18:74"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2365:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2365:26:74"
                  },
                  "nodeType": "YulIf",
                  "src": "2362:2:74"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2482:111:74",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2503:1:74",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2510:3:74",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2515:10:74",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "2506:3:74"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2506:20:74"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2496:6:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2496:31:74"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2496:31:74"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2547:1:74",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2550:4:74",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2540:6:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2540:15:74"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2540:15:74"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2575:1:74",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2578:4:74",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2568:6:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2568:15:74"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2568:15:74"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2438:18:74"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2461:6:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2469:2:74",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2458:2:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2458:14:74"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "2435:2:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2435:38:74"
                  },
                  "nodeType": "YulIf",
                  "src": "2432:2:74"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "2254:4:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2263:6:74",
                "type": ""
              }
            ],
            "src": "2219:380:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2636:95:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2653:1:74",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2660:3:74",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2665:10:74",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2656:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2656:20:74"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2646:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2646:31:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2646:31:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2693:1:74",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2696:4:74",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2686:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2686:15:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2686:15:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2717:1:74",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2720:4:74",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2710:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2710:15:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2710:15:74"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "2604:127:74"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), array)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_addresst_uint32t_bool_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(value4, value4) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(value4, value4) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value4, value4) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n        value3 := abi_decode_address_fromMemory(add(headStart, 96))\n        let value := mload(add(headStart, 128))\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(value4, value4) }\n        value4 := value\n        let value_1 := mload(add(headStart, 160))\n        if iszero(eq(value_1, iszero(iszero(value_1)))) { revert(value5, value5) }\n        value5 := value_1\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
      "id": 74,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:15252:74",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:74",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:124:74",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:74"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:74"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:74"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "165:16:74",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "174:1:74",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "177:1:74",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "167:12:74"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "167:12:74"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:74"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:74"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "150:3:74",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "155:1:74",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "146:3:74"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "146:11:74"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "159:1:74",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "142:3:74"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "142:19:74"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:74"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:31:74"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:42:74"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:50:74"
                  },
                  "nodeType": "YulIf",
                  "src": "111:2:74"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:74",
                "type": ""
              }
            ],
            "src": "14:173:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "262:126:74",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "308:26:74",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "317:6:74"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "325:6:74"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "310:6:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "310:22:74"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "310:22:74"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "283:7:74"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "292:9:74"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "279:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "279:23:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "304:2:74",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "275:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "275:32:74"
                  },
                  "nodeType": "YulIf",
                  "src": "272:2:74"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "343:39:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "372:9:74"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "353:18:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "353:29:74"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "343:6:74"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "228:9:74",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "239:7:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "251:6:74",
                "type": ""
              }
            ],
            "src": "192:196:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "480:183:74",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "526:26:74",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "535:6:74"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "543:6:74"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "528:6:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "528:22:74"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "528:22:74"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "501:7:74"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "510:9:74"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "497:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "497:23:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "522:2:74",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "493:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "493:32:74"
                  },
                  "nodeType": "YulIf",
                  "src": "490:2:74"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "561:39:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "590:9:74"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "571:18:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "571:29:74"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "561:6:74"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "609:48:74",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "642:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "653:2:74",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "638:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "638:18:74"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "619:18:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "619:38:74"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "609:6:74"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "438:9:74",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "449:7:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "461:6:74",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "469:6:74",
                "type": ""
              }
            ],
            "src": "393:270:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "772:234:74",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "818:26:74",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "827:6:74"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "835:6:74"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "820:6:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "820:22:74"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "820:22:74"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "793:7:74"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "802:9:74"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "789:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "789:23:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "814:2:74",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "785:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "785:32:74"
                  },
                  "nodeType": "YulIf",
                  "src": "782:2:74"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "853:39:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "882:9:74"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "863:18:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "863:29:74"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "853:6:74"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "901:48:74",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "934:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "945:2:74",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "930:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "930:18:74"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "911:18:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "911:38:74"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "901:6:74"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "958:42:74",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "985:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "996:2:74",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "981:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "981:18:74"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "968:12:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "968:32:74"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "958:6:74"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "722:9:74",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "733:7:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "745:6:74",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "753:6:74",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "761:6:74",
                "type": ""
              }
            ],
            "src": "668:338:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1098:177:74",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1144:26:74",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1153:6:74"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1161:6:74"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1146:6:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1146:22:74"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1146:22:74"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1119:7:74"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1128:9:74"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1115:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1115:23:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1140:2:74",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1111:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1111:32:74"
                  },
                  "nodeType": "YulIf",
                  "src": "1108:2:74"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1179:39:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1208:9:74"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1189:18:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1189:29:74"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1179:6:74"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1227:42:74",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1254:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1265:2:74",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1250:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1250:18:74"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1237:12:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1237:32:74"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1227:6:74"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1056:9:74",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1067:7:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1079:6:74",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1087:6:74",
                "type": ""
              }
            ],
            "src": "1011:264:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1350:120:74",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1396:26:74",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1405:6:74"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1413:6:74"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1398:6:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1398:22:74"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1398:22:74"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1371:7:74"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1380:9:74"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1367:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1367:23:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1392:2:74",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1363:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1363:32:74"
                  },
                  "nodeType": "YulIf",
                  "src": "1360:2:74"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1431:33:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1454:9:74"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1441:12:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1441:23:74"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1431:6:74"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1316:9:74",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1327:7:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1339:6:74",
                "type": ""
              }
            ],
            "src": "1280:190:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1562:177:74",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1608:26:74",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1617:6:74"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1625:6:74"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1610:6:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1610:22:74"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1610:22:74"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1583:7:74"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1592:9:74"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1579:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1579:23:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1604:2:74",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1575:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1575:32:74"
                  },
                  "nodeType": "YulIf",
                  "src": "1572:2:74"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1643:33:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1666:9:74"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1653:12:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1653:23:74"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1643:6:74"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1685:48:74",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1718:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1729:2:74",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1714:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1714:18:74"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1695:18:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1695:38:74"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1685:6:74"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1520:9:74",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1531:7:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1543:6:74",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1551:6:74",
                "type": ""
              }
            ],
            "src": "1475:264:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1831:171:74",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1877:26:74",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1886:6:74"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1894:6:74"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1879:6:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1879:22:74"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1879:22:74"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1852:7:74"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1861:9:74"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1848:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1848:23:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1873:2:74",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1844:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1844:32:74"
                  },
                  "nodeType": "YulIf",
                  "src": "1841:2:74"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1912:33:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1935:9:74"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1922:12:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1922:23:74"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1912:6:74"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1954:42:74",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1981:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1992:2:74",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1977:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1977:18:74"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1964:12:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1964:32:74"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1954:6:74"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1789:9:74",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1800:7:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1812:6:74",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1820:6:74",
                "type": ""
              }
            ],
            "src": "1744:258:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2076:237:74",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2122:26:74",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2131:6:74"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2139:6:74"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2124:6:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2124:22:74"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2124:22:74"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2097:7:74"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2106:9:74"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2093:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2093:23:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2118:2:74",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2089:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2089:32:74"
                  },
                  "nodeType": "YulIf",
                  "src": "2086:2:74"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2157:36:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2183:9:74"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2170:12:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2170:23:74"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2161:5:74",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2257:26:74",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2266:6:74"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2274:6:74"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2259:6:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2259:22:74"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2259:22:74"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2215:5:74"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2226:5:74"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2237:3:74",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2242:10:74",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2233:3:74"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2233:20:74"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2222:3:74"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2222:32:74"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2212:2:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2212:43:74"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2205:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2205:51:74"
                  },
                  "nodeType": "YulIf",
                  "src": "2202:2:74"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2292:15:74",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2302:5:74"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2292:6:74"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2042:9:74",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2053:7:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2065:6:74",
                "type": ""
              }
            ],
            "src": "2007:306:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2388:120:74",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2434:26:74",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2443:6:74"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2451:6:74"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2436:6:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2436:22:74"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2436:22:74"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2409:7:74"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2418:9:74"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2405:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2405:23:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2430:2:74",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2401:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2401:32:74"
                  },
                  "nodeType": "YulIf",
                  "src": "2398:2:74"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2469:33:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2492:9:74"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2479:12:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2479:23:74"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2469:6:74"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2354:9:74",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2365:7:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2377:6:74",
                "type": ""
              }
            ],
            "src": "2318:190:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2594:113:74",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2640:26:74",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2649:6:74"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2657:6:74"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2642:6:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2642:22:74"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2642:22:74"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2615:7:74"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2624:9:74"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2611:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2611:23:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2636:2:74",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2607:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2607:32:74"
                  },
                  "nodeType": "YulIf",
                  "src": "2604:2:74"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2675:26:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2691:9:74"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2685:5:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2685:16:74"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2675:6:74"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2560:9:74",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2571:7:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2583:6:74",
                "type": ""
              }
            ],
            "src": "2513:194:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3101:397:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3118:3:74"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3123:25:74",
                        "type": "",
                        "value": "AccessControl: account "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3111:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3111:38:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3111:38:74"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3158:27:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3178:6:74"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3172:5:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3172:13:74"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3162:6:74",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3220:6:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3228:4:74",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3216:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3216:17:74"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3239:3:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3244:2:74",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3235:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3235:12:74"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3249:6:74"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3194:21:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3194:62:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3194:62:74"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3265:26:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3279:3:74"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3284:6:74"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3275:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3275:16:74"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3269:2:74",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3311:2:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3315:2:74",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3307:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3307:11:74"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3320:19:74",
                        "type": "",
                        "value": " is missing role "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3300:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3300:40:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3300:40:74"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3349:29:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3371:6:74"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3365:5:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3365:13:74"
                  },
                  "variables": [
                    {
                      "name": "length_1",
                      "nodeType": "YulTypedName",
                      "src": "3353:8:74",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3413:6:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3421:4:74",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3409:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3409:17:74"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3432:2:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3436:2:74",
                            "type": "",
                            "value": "40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3428:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3428:11:74"
                      },
                      {
                        "name": "length_1",
                        "nodeType": "YulIdentifier",
                        "src": "3441:8:74"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3387:21:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3387:63:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3387:63:74"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3459:33:74",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3474:2:74"
                          },
                          {
                            "name": "length_1",
                            "nodeType": "YulIdentifier",
                            "src": "3478:8:74"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3470:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3470:17:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3489:2:74",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3466:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3466:26:74"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3459:3:74"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3069:3:74",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3074:6:74",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3082:6:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3093:3:74",
                "type": ""
              }
            ],
            "src": "2712:786:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3604:102:74",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3614:26:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3626:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3637:2:74",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3622:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3622:18:74"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3614:4:74"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3656:9:74"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3671:6:74"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3687:3:74",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3692:1:74",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3683:3:74"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3683:11:74"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3696:1:74",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3679:3:74"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3679:19:74"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3667:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3667:32:74"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3649:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3649:51:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3649:51:74"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3573:9:74",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3584:6:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3595:4:74",
                "type": ""
              }
            ],
            "src": "3503:203:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3840:145:74",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3850:26:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3862:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3873:2:74",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3858:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3858:18:74"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3850:4:74"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3892:9:74"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3907:6:74"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3923:3:74",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3928:1:74",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3919:3:74"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3919:11:74"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3932:1:74",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3915:3:74"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3915:19:74"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3903:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3903:32:74"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3885:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3885:51:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3885:51:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3956:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3967:2:74",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3952:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3952:18:74"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3972:6:74"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3945:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3945:34:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3945:34:74"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3801:9:74",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3812:6:74",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3820:6:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3831:4:74",
                "type": ""
              }
            ],
            "src": "3711:274:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4117:162:74",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4127:26:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4139:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4150:2:74",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4135:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4135:18:74"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4127:4:74"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4169:9:74"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4184:6:74"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4200:3:74",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4205:1:74",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4196:3:74"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4196:11:74"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4209:1:74",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4192:3:74"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4192:19:74"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4180:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4180:32:74"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4162:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4162:51:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4162:51:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4233:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4244:2:74",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4229:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4229:18:74"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4253:6:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4261:10:74",
                            "type": "",
                            "value": "0xffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4249:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4249:23:74"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4222:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4222:51:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4222:51:74"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint32__to_t_address_t_uint32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4078:9:74",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4089:6:74",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4097:6:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4108:4:74",
                "type": ""
              }
            ],
            "src": "3990:289:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4433:221:74",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4443:26:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4455:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4466:2:74",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4451:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4451:18:74"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4443:4:74"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4485:9:74"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4500:6:74"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4516:3:74",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4521:1:74",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4512:3:74"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4512:11:74"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4525:1:74",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4508:3:74"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4508:19:74"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4496:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4496:32:74"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4478:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4478:51:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4478:51:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4549:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4560:2:74",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4545:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4545:18:74"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4569:6:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4577:10:74",
                            "type": "",
                            "value": "0xffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4565:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4565:23:74"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4538:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4538:51:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4538:51:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4609:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4620:2:74",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4605:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4605:18:74"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "4639:6:74"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4632:6:74"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4632:14:74"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4625:6:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4625:22:74"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4598:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4598:50:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4598:50:74"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint32_t_bool__to_t_address_t_uint32_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4386:9:74",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4397:6:74",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4405:6:74",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4413:6:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4424:4:74",
                "type": ""
              }
            ],
            "src": "4284:370:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4754:92:74",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4764:26:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4776:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4787:2:74",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4772:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4772:18:74"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4764:4:74"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4806:9:74"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "4831:6:74"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4824:6:74"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4824:14:74"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4817:6:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4817:22:74"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4799:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4799:41:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4799:41:74"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4723:9:74",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4734:6:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4745:4:74",
                "type": ""
              }
            ],
            "src": "4659:187:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4952:76:74",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4962:26:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4974:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4985:2:74",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4970:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4970:18:74"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4962:4:74"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5004:9:74"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5015:6:74"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4997:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4997:25:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4997:25:74"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4921:9:74",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4932:6:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4943:4:74",
                "type": ""
              }
            ],
            "src": "4851:177:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5154:262:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5171:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5182:2:74",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5164:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5164:21:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5164:21:74"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5194:27:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5214:6:74"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5208:5:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5208:13:74"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5198:6:74",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5241:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5252:2:74",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5237:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5237:18:74"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5257:6:74"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5230:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5230:34:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5230:34:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5299:6:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5307:2:74",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5295:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5295:15:74"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5316:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5327:2:74",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5312:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5312:18:74"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5332:6:74"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "5273:21:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5273:66:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5273:66:74"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5348:62:74",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5364:9:74"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5383:6:74"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5391:2:74",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5379:3:74"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5379:15:74"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5400:2:74",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "5396:3:74"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5396:7:74"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5375:3:74"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5375:29:74"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5360:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5360:45:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5407:2:74",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5356:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5356:54:74"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5348:4:74"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5123:9:74",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5134:6:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5145:4:74",
                "type": ""
              }
            ],
            "src": "5033:383:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5595:224:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5612:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5623:2:74",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5605:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5605:21:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5605:21:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5646:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5657:2:74",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5642:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5642:18:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5662:2:74",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5635:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5635:30:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5635:30:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5685:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5696:2:74",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5681:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5681:18:74"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5701:34:74",
                        "type": "",
                        "value": "EnumerableSet: index out of boun"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5674:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5674:62:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5674:62:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5756:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5767:2:74",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5752:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5752:18:74"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5772:4:74",
                        "type": "",
                        "value": "ds"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5745:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5745:32:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5745:32:74"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5786:27:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5798:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5809:3:74",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5794:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5794:19:74"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5786:4:74"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5572:9:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5586:4:74",
                "type": ""
              }
            ],
            "src": "5421:398:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5998:182:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6015:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6026:2:74",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6008:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6008:21:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6008:21:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6049:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6060:2:74",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6045:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6045:18:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6065:2:74",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6038:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6038:30:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6038:30:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6088:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6099:2:74",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6084:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6084:18:74"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6104:34:74",
                        "type": "",
                        "value": "Strings: hex length insufficient"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6077:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6077:62:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6077:62:74"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6148:26:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6160:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6171:2:74",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6156:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6156:18:74"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6148:4:74"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5975:9:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5989:4:74",
                "type": ""
              }
            ],
            "src": "5824:356:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6359:225:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6376:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6387:2:74",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6369:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6369:21:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6369:21:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6410:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6421:2:74",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6406:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6406:18:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6426:2:74",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6399:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6399:30:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6399:30:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6449:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6460:2:74",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6445:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6445:18:74"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6465:34:74",
                        "type": "",
                        "value": "ERC20: transfer to the zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6438:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6438:62:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6438:62:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6520:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6531:2:74",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6516:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6516:18:74"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6536:5:74",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6509:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6509:33:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6509:33:74"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6551:27:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6563:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6574:3:74",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6559:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6559:19:74"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6551:4:74"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6336:9:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6350:4:74",
                "type": ""
              }
            ],
            "src": "6185:399:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6763:170:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6780:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6791:2:74",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6773:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6773:21:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6773:21:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6814:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6825:2:74",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6810:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6810:18:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6830:2:74",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6803:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6803:30:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6803:30:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6853:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6864:2:74",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6849:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6849:18:74"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6869:22:74",
                        "type": "",
                        "value": "Pausable: not paused"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6842:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6842:50:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6842:50:74"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6901:26:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6913:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6924:2:74",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6909:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6909:18:74"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6901:4:74"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6740:9:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6754:4:74",
                "type": ""
              }
            ],
            "src": "6589:344:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7112:224:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7129:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7140:2:74",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7122:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7122:21:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7122:21:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7163:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7174:2:74",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7159:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7159:18:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7179:2:74",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7152:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7152:30:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7152:30:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7202:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7213:2:74",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7198:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7198:18:74"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7218:34:74",
                        "type": "",
                        "value": "ERC20: burn amount exceeds balan"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7191:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7191:62:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7191:62:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7273:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7284:2:74",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7269:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7269:18:74"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7289:4:74",
                        "type": "",
                        "value": "ce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7262:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7262:32:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7262:32:74"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7303:27:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7315:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7326:3:74",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7311:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7311:19:74"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7303:4:74"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7089:9:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7103:4:74",
                "type": ""
              }
            ],
            "src": "6938:398:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7515:247:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7532:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7543:2:74",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7525:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7525:21:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7525:21:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7566:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7577:2:74",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7562:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7562:18:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7582:2:74",
                        "type": "",
                        "value": "57"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7555:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7555:30:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7555:30:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7605:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7616:2:74",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7601:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7601:18:74"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7621:34:74",
                        "type": "",
                        "value": "ERC20PresetMinterPauser: must ha"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7594:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7594:62:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7594:62:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7676:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7687:2:74",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7672:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7672:18:74"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7692:27:74",
                        "type": "",
                        "value": "ve pauser role to unpause"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7665:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7665:55:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7665:55:74"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7729:27:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7741:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7752:3:74",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7737:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7737:19:74"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7729:4:74"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_176e32c23b35bed3cd8ee309232e2364823f6f66078e0cf4f5b5e41eee016186__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7492:9:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7506:4:74",
                "type": ""
              }
            ],
            "src": "7341:421:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7941:224:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7958:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7969:2:74",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7951:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7951:21:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7951:21:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7992:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8003:2:74",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7988:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7988:18:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8008:2:74",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7981:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7981:30:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7981:30:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8031:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8042:2:74",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8027:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8027:18:74"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8047:34:74",
                        "type": "",
                        "value": "ERC20: approve to the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8020:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8020:62:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8020:62:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8102:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8113:2:74",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8098:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8098:18:74"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8118:4:74",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8091:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8091:32:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8091:32:74"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8132:27:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8144:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8155:3:74",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8140:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8140:19:74"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8132:4:74"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7918:9:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7932:4:74",
                "type": ""
              }
            ],
            "src": "7767:398:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8344:228:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8361:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8372:2:74",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8354:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8354:21:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8354:21:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8395:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8406:2:74",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8391:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8391:18:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8411:2:74",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8384:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8384:30:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8384:30:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8434:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8445:2:74",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8430:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8430:18:74"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8450:34:74",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8423:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8423:62:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8423:62:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8505:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8516:2:74",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8501:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8501:18:74"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8521:8:74",
                        "type": "",
                        "value": "alance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8494:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8494:36:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8494:36:74"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8539:27:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8551:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8562:3:74",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8547:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8547:19:74"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8539:4:74"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8321:9:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8335:4:74",
                "type": ""
              }
            ],
            "src": "8170:402:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8751:166:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8768:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8779:2:74",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8761:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8761:21:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8761:21:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8802:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8813:2:74",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8798:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8798:18:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8818:2:74",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8791:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8791:30:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8791:30:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8841:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8852:2:74",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8837:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8837:18:74"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8857:18:74",
                        "type": "",
                        "value": "Pausable: paused"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8830:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8830:46:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8830:46:74"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8885:26:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8897:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8908:2:74",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8893:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8893:18:74"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8885:4:74"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8728:9:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8742:4:74",
                "type": ""
              }
            ],
            "src": "8577:340:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9096:230:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9113:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9124:2:74",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9106:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9106:21:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9106:21:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9147:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9158:2:74",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9143:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9143:18:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9163:2:74",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9136:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9136:30:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9136:30:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9186:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9197:2:74",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9182:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9182:18:74"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9202:34:74",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9175:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9175:62:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9175:62:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9257:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9268:2:74",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9253:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9253:18:74"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9273:10:74",
                        "type": "",
                        "value": "llowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9246:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9246:38:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9246:38:74"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9293:27:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9305:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9316:3:74",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9301:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9301:19:74"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9293:4:74"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9073:9:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9087:4:74",
                "type": ""
              }
            ],
            "src": "8922:404:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9505:244:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9522:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9533:2:74",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9515:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9515:21:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9515:21:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9556:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9567:2:74",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9552:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9552:18:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9572:2:74",
                        "type": "",
                        "value": "54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9545:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9545:30:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9545:30:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9595:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9606:2:74",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9591:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9591:18:74"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9611:34:74",
                        "type": "",
                        "value": "ERC20PresetMinterPauser: must ha"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9584:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9584:62:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9584:62:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9666:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9677:2:74",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9662:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9662:18:74"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9682:24:74",
                        "type": "",
                        "value": "ve minter role to mint"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9655:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9655:52:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9655:52:74"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9716:27:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9728:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9739:3:74",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9724:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9724:19:74"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9716:4:74"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9efa111136b49cf2058ce33f60fa04a5749fd87012d74cadc251e21e1db53342__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9482:9:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9496:4:74",
                "type": ""
              }
            ],
            "src": "9331:418:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9928:226:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9945:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9956:2:74",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9938:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9938:21:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9938:21:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9979:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9990:2:74",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9975:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9975:18:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9995:2:74",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9968:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9968:30:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9968:30:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10018:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10029:2:74",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10014:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10014:18:74"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10034:34:74",
                        "type": "",
                        "value": "ERC20: burn amount exceeds allow"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10007:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10007:62:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10007:62:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10089:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10100:2:74",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10085:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10085:18:74"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10105:6:74",
                        "type": "",
                        "value": "ance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10078:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10078:34:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10078:34:74"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10121:27:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10133:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10144:3:74",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10129:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10129:19:74"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10121:4:74"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9905:9:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9919:4:74",
                "type": ""
              }
            ],
            "src": "9754:400:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10333:223:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10350:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10361:2:74",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10343:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10343:21:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10343:21:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10384:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10395:2:74",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10380:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10380:18:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10400:2:74",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10373:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10373:30:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10373:30:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10423:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10434:2:74",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10419:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10419:18:74"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10439:34:74",
                        "type": "",
                        "value": "ERC20: burn from the zero addres"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10412:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10412:62:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10412:62:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10494:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10505:2:74",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10490:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10490:18:74"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10510:3:74",
                        "type": "",
                        "value": "s"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10483:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10483:31:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10483:31:74"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10523:27:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10535:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10546:3:74",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10531:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10531:19:74"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10523:4:74"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10310:9:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10324:4:74",
                "type": ""
              }
            ],
            "src": "10159:397:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10735:227:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10752:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10763:2:74",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10745:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10745:21:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10745:21:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10786:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10797:2:74",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10782:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10782:18:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10802:2:74",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10775:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10775:30:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10775:30:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10825:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10836:2:74",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10821:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10821:18:74"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10841:34:74",
                        "type": "",
                        "value": "ERC20: transfer from the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10814:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10814:62:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10814:62:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10896:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10907:2:74",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10892:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10892:18:74"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10912:7:74",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10885:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10885:35:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10885:35:74"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10929:27:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10941:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10952:3:74",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10937:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10937:19:74"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10929:4:74"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10712:9:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10726:4:74",
                "type": ""
              }
            ],
            "src": "10561:401:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11141:173:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11158:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11169:2:74",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11151:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11151:21:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11151:21:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11192:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11203:2:74",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11188:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11188:18:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11208:2:74",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11181:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11181:30:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11181:30:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11231:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11242:2:74",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11227:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11227:18:74"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11247:25:74",
                        "type": "",
                        "value": "Only LongShort contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11220:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11220:53:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11220:53:74"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11282:26:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11294:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11305:2:74",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11290:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11290:18:74"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11282:4:74"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c333c2ae0690aa8010b8f5a98c7f0714e7e061cb6d976472b37253c9b99b6629__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11118:9:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11132:4:74",
                "type": ""
              }
            ],
            "src": "10967:347:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11493:226:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11510:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11521:2:74",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11503:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11503:21:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11503:21:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11544:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11555:2:74",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11540:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11540:18:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11560:2:74",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11533:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11533:30:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11533:30:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11583:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11594:2:74",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11579:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11579:18:74"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11599:34:74",
                        "type": "",
                        "value": "ERC20: approve from the zero add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11572:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11572:62:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11572:62:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11654:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11665:2:74",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11650:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11650:18:74"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11670:6:74",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11643:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11643:34:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11643:34:74"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11686:27:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11698:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11709:3:74",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11694:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11694:19:74"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11686:4:74"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11470:9:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11484:4:74",
                "type": ""
              }
            ],
            "src": "11319:400:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11898:245:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11915:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11926:2:74",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11908:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11908:21:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11908:21:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11949:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11960:2:74",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11945:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11945:18:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11965:2:74",
                        "type": "",
                        "value": "55"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11938:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11938:30:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11938:30:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11988:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11999:2:74",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11984:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11984:18:74"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12004:34:74",
                        "type": "",
                        "value": "ERC20PresetMinterPauser: must ha"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11977:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11977:62:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11977:62:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12059:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12070:2:74",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12055:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12055:18:74"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12075:25:74",
                        "type": "",
                        "value": "ve pauser role to pause"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12048:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12048:53:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12048:53:74"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12110:27:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12122:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12133:3:74",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12118:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12118:19:74"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12110:4:74"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d581fb23a6d539f3015b3485052424734f4b05014d1d5211f35a049cff57e330__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11875:9:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11889:4:74",
                "type": ""
              }
            ],
            "src": "11724:419:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12322:227:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12339:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12350:2:74",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12332:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12332:21:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12332:21:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12373:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12384:2:74",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12369:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12369:18:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12389:2:74",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12362:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12362:30:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12362:30:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12412:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12423:2:74",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12408:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12408:18:74"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12428:34:74",
                        "type": "",
                        "value": "ERC20: decreased allowance below"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12401:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12401:62:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12401:62:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12483:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12494:2:74",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12479:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12479:18:74"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12499:7:74",
                        "type": "",
                        "value": " zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12472:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12472:35:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12472:35:74"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12516:27:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12528:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12539:3:74",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12524:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12524:19:74"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12516:4:74"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12299:9:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12313:4:74",
                "type": ""
              }
            ],
            "src": "12148:401:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12728:237:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12745:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12756:2:74",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12738:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12738:21:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12738:21:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12779:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12790:2:74",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12775:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12775:18:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12795:2:74",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12768:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12768:30:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12768:30:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12818:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12829:2:74",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12814:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12814:18:74"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12834:34:74",
                        "type": "",
                        "value": "AccessControl: can only renounce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12807:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12807:62:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12807:62:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12889:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12900:2:74",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12885:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12885:18:74"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12905:17:74",
                        "type": "",
                        "value": " roles for self"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12878:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12878:45:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12878:45:74"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12932:27:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12944:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12955:3:74",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12940:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12940:19:74"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12932:4:74"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12705:9:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12719:4:74",
                "type": ""
              }
            ],
            "src": "12554:411:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13144:181:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13161:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13172:2:74",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13154:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13154:21:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13154:21:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13195:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13206:2:74",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13191:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13191:18:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13211:2:74",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13184:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13184:30:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13184:30:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13234:9:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13245:2:74",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13230:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13230:18:74"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13250:33:74",
                        "type": "",
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13223:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13223:61:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13223:61:74"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13293:26:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13305:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13316:2:74",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13301:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13301:18:74"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13293:4:74"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13121:9:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13135:4:74",
                "type": ""
              }
            ],
            "src": "12970:355:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13431:76:74",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13441:26:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13453:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13464:2:74",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13449:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13449:18:74"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13441:4:74"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13483:9:74"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "13494:6:74"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13476:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13476:25:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13476:25:74"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13400:9:74",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13411:6:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13422:4:74",
                "type": ""
              }
            ],
            "src": "13330:177:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13611:93:74",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13621:26:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13633:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13644:2:74",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13629:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13629:18:74"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13621:4:74"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13663:9:74"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "13678:6:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13686:10:74",
                            "type": "",
                            "value": "0xffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "13674:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13674:23:74"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13656:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13656:42:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13656:42:74"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13580:9:74",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13591:6:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13602:4:74",
                "type": ""
              }
            ],
            "src": "13512:192:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13806:87:74",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13816:26:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13828:9:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13839:2:74",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13824:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13824:18:74"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13816:4:74"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13858:9:74"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "13873:6:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13881:4:74",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "13869:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13869:17:74"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13851:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13851:36:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13851:36:74"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13775:9:74",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13786:6:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13797:4:74",
                "type": ""
              }
            ],
            "src": "13709:184:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13946:80:74",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13973:22:74",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "13975:16:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13975:18:74"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13975:18:74"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13962:1:74"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "13969:1:74"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "13965:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13965:6:74"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "13959:2:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13959:13:74"
                  },
                  "nodeType": "YulIf",
                  "src": "13956:2:74"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14004:16:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14015:1:74"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14018:1:74"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14011:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14011:9:74"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "14004:3:74"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "13929:1:74",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "13932:1:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "13938:3:74",
                "type": ""
              }
            ],
            "src": "13898:128:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14083:116:74",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14142:22:74",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14144:16:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14144:18:74"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14144:18:74"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "14114:1:74"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "14107:6:74"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14107:9:74"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "14100:6:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14100:17:74"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "14122:1:74"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14133:1:74",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "14129:3:74"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14129:6:74"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "14137:1:74"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "14125:3:74"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14125:14:74"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "14119:2:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14119:21:74"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "14096:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14096:45:74"
                  },
                  "nodeType": "YulIf",
                  "src": "14093:2:74"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14173:20:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14188:1:74"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14191:1:74"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "14184:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14184:9:74"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "14173:7:74"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "14062:1:74",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "14065:1:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "14071:7:74",
                "type": ""
              }
            ],
            "src": "14031:168:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14253:76:74",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14275:22:74",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14277:16:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14277:18:74"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14277:18:74"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14269:1:74"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14272:1:74"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "14266:2:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14266:8:74"
                  },
                  "nodeType": "YulIf",
                  "src": "14263:2:74"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14306:17:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14318:1:74"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14321:1:74"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "14314:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14314:9:74"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "14306:4:74"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "14235:1:74",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "14238:1:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "14244:4:74",
                "type": ""
              }
            ],
            "src": "14204:125:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14387:205:74",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "14397:10:74",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "14406:1:74",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "14401:1:74",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14466:63:74",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "14491:3:74"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "14496:1:74"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "14487:3:74"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14487:11:74"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "14510:3:74"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "14515:1:74"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "14506:3:74"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "14506:11:74"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "14500:5:74"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14500:18:74"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "14480:6:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14480:39:74"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14480:39:74"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "14427:1:74"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "14430:6:74"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "14424:2:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14424:13:74"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "14438:19:74",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "14440:15:74",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "14449:1:74"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14452:2:74",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "14445:3:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14445:10:74"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "14440:1:74"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "14420:3:74",
                    "statements": []
                  },
                  "src": "14416:113:74"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14555:31:74",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "14568:3:74"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "14573:6:74"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "14564:3:74"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14564:16:74"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14582:1:74",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "14557:6:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14557:27:74"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14557:27:74"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "14544:1:74"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "14547:6:74"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "14541:2:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14541:13:74"
                  },
                  "nodeType": "YulIf",
                  "src": "14538:2:74"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "14365:3:74",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "14370:3:74",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "14375:6:74",
                "type": ""
              }
            ],
            "src": "14334:258:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14644:89:74",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14671:22:74",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14673:16:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14673:18:74"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14673:18:74"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14664:5:74"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14657:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14657:13:74"
                  },
                  "nodeType": "YulIf",
                  "src": "14654:2:74"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14702:25:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14713:5:74"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14724:1:74",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "14720:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14720:6:74"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14709:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14709:18:74"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "14702:3:74"
                    }
                  ]
                }
              ]
            },
            "name": "decrement_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14626:5:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "14636:3:74",
                "type": ""
              }
            ],
            "src": "14597:136:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14793:325:74",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14803:22:74",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14817:1:74",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "14820:4:74"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "14813:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14813:12:74"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "14803:6:74"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "14834:38:74",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "14864:4:74"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14870:1:74",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "14860:3:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14860:12:74"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "14838:18:74",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14911:31:74",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "14913:27:74",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "14927:6:74"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14935:4:74",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "14923:3:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14923:17:74"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "14913:6:74"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "14891:18:74"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14884:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14884:26:74"
                  },
                  "nodeType": "YulIf",
                  "src": "14881:2:74"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15001:111:74",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15022:1:74",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "15029:3:74",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "15034:10:74",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "15025:3:74"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "15025:20:74"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "15015:6:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15015:31:74"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15015:31:74"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15066:1:74",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15069:4:74",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "15059:6:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15059:15:74"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15059:15:74"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15094:1:74",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15097:4:74",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "15087:6:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15087:15:74"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15087:15:74"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "14957:18:74"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "14980:6:74"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14988:2:74",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "14977:2:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14977:14:74"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "14954:2:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14954:38:74"
                  },
                  "nodeType": "YulIf",
                  "src": "14951:2:74"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "14773:4:74",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "14782:6:74",
                "type": ""
              }
            ],
            "src": "14738:380:74"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15155:95:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15172:1:74",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15179:3:74",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15184:10:74",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "15175:3:74"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15175:20:74"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15165:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15165:31:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15165:31:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15212:1:74",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15215:4:74",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15205:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15205:15:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15205:15:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15236:1:74",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15239:4:74",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "15229:6:74"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15229:15:74"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15229:15:74"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "15123:127:74"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint32__to_t_address_t_uint32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, 0xffffffff))\n    }\n    function abi_encode_tuple_t_address_t_uint32_t_bool__to_t_address_t_uint32_t_bool__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, 0xffffffff))\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"EnumerableSet: index out of boun\")\n        mstore(add(headStart, 96), \"ds\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_176e32c23b35bed3cd8ee309232e2364823f6f66078e0cf4f5b5e41eee016186__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 57)\n        mstore(add(headStart, 64), \"ERC20PresetMinterPauser: must ha\")\n        mstore(add(headStart, 96), \"ve pauser role to unpause\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9efa111136b49cf2058ce33f60fa04a5749fd87012d74cadc251e21e1db53342__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"ERC20PresetMinterPauser: must ha\")\n        mstore(add(headStart, 96), \"ve minter role to mint\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds allow\")\n        mstore(add(headStart, 96), \"ance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c333c2ae0690aa8010b8f5a98c7f0714e7e061cb6d976472b37253c9b99b6629__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Only LongShort contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d581fb23a6d539f3015b3485052424734f4b05014d1d5211f35a049cff57e330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 55)\n        mstore(add(headStart, 64), \"ERC20PresetMinterPauser: must ha\")\n        mstore(add(headStart, 96), \"ve pauser role to pause\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
      "id": 74,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "447:4918:5:-:0;;;1342:301;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1520:4;1526:6;1303:4:68;1309:6;1973:5:63;1965;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1988:17:63;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;925:7:62;:15;;-1:-1:-1;;925:15:62;;;-1:-1:-1;1327:44:68::1;-1:-1:-1::0;665:10:69;1358:12:68::1;1327:10;:44::i;:::-;1382:37;967:24;665:10:69::0;1406:12:68::1;586:96:69::0;1382:37:68::1;1429;1035:24;665:10:69::0;1453:12:68::1;586:96:69::0;1429:37:68::1;-1:-1:-1::0;;1540:9:5::1;:22:::0;;-1:-1:-1;;;;;;1540:22:5::1;;-1:-1:-1::0;;;;;1540:22:5;;::::1;;;::::0;;1568:6:::1;:16:::0;;;;;::::1;-1:-1:-1::0;;;;;;1590:26:5;;;;;;;::::1;::::0;;;::::1;-1:-1:-1::0;;;1590:26:5::1;;-1:-1:-1::0;;;;1622:16:5::1;-1:-1:-1::0;;;1622:16:5;::::1;;::::0;;;::::1;;::::0;;-1:-1:-1;447:4918:5;;-1:-1:-1;447:4918:5;2922:166:61;3009:31;3026:4;3032:7;3009:16;;;;;:31;;:::i;:::-;3050:18;;;;:12;:18;;;;;;;;:31;;3073:7;;3050:22;;;;;:31;;:::i;:::-;;2922:166;;:::o;7515:110:60:-;7593:25;7604:4;7610:7;7593:10;:25::i;:::-;7515:110;;:::o;6430:150:73:-;6500:4;6523:50;6528:3;-1:-1:-1;;;;;6548:23:73;;6523:4;:50::i;:::-;6516:57;;6430:150;;;;;:::o;7948:224:60:-;4452:4;4475:12;;;;;;;;;;;-1:-1:-1;;;;;4475:29:60;;;;;;;;;;;;8017:149;;8060:6;:12;;;;;;;;;;;-1:-1:-1;;;;;8060:29:60;;;;;;;;;;:36;;-1:-1:-1;;8060:36:60;-1:-1:-1;8060:36:60;;;8115:40;665:10:69;;8060:12:60;;8115:40;;8060:6;8115:40;7948:224;;:::o;1632:404:73:-;1695:4;3902:19;;;:12;;;:19;;;;;;1711:319;;-1:-1:-1;1753:23:73;;;;;;;;:11;:23;;;;;;;;;;;;;1933:18;;1911:19;;;:12;;;:19;;;;;;:40;;;;1965:11;;1711:319;-1:-1:-1;2014:5:73;2007:12;;447:4918:5;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;447:4918:5;;;-1:-1:-1;447:4918:5;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:177:74;93:13;;-1:-1:-1;;;;;135:31:74;;125:42;;115:2;;181:1;178;171:12;115:2;74:117;;;:::o;196:909::-;;303:3;296:4;288:6;284:17;280:27;270:2;;325:5;318;311:20;270:2;352:13;;-1:-1:-1;414:10:74;;;411:2;;;427:18;;:::i;:::-;502:2;496:9;470:2;556:13;;-1:-1:-1;;552:22:74;;;576:2;548:31;544:40;532:53;;;600:18;;;620:22;;;597:46;594:2;;;646:18;;:::i;:::-;686:10;682:2;675:22;721:2;713:6;706:18;743:4;733:14;;788:3;783:2;778;770:6;766:15;762:24;759:33;756:2;;;809:5;802;795:20;756:2;835:5;826:14;;849:133;863:2;860:1;857:9;849:133;;;951:14;;;947:23;;941:30;920:14;;;916:23;;909:63;874:10;;;;849:133;;;1000:2;997:1;994:9;991:2;;;1059:5;1054:2;1049;1041:6;1037:15;1033:24;1026:39;991:2;1093:6;260:845;-1:-1:-1;;;;;;260:845:74:o;1110:1104::-;;;;;;;1334:3;1322:9;1313:7;1309:23;1305:33;1302:2;;;1356:6;1348;1341:22;1302:2;1388:16;;-1:-1:-1;1453:14:74;;;1450:2;;;1485:6;1477;1470:22;1450:2;1513:61;1566:7;1557:6;1546:9;1542:22;1513:61;:::i;:::-;1503:71;;1620:2;1609:9;1605:18;1599:25;1583:41;;1649:2;1639:8;1636:16;1633:2;;;1670:6;1662;1655:22;1633:2;;1698:63;1753:7;1742:8;1731:9;1727:24;1698:63;:::i;:::-;1688:73;;;1780:49;1825:2;1814:9;1810:18;1780:49;:::i;:::-;1770:59;;1848:49;1893:2;1882:9;1878:18;1848:49;:::i;:::-;1838:59;;1940:3;1929:9;1925:19;1919:26;1985:10;1978:5;1974:22;1967:5;1964:33;1954:2;;2016:6;2008;2001:22;1954:2;2094:3;2079:19;;2073:26;2044:5;;-1:-1:-1;2137:15:74;;2130:23;2118:36;;2108:2;;2173:6;2165;2158:22;2108:2;2201:7;2191:17;;;1292:922;;;;;;;;:::o;2219:380::-;2298:1;2294:12;;;;2341;;;2362:2;;2416:4;2408:6;2404:17;2394:27;;2362:2;2469;2461:6;2458:14;2438:18;2435:38;2432:2;;;2515:10;2510:3;2506:20;2503:1;2496:31;2550:4;2547:1;2540:15;2578:4;2575:1;2568:15;2432:2;;2274:325;;;:::o;2604:127::-;2665:10;2660:3;2656:20;2653:1;2646:31;2696:4;2693:1;2686:15;2720:4;2717:1;2710:15;2636:95;447:4918:5;;;;;;",
  "deployedSourceMap": "447:4918:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;817:224:61;;;;;;:::i;:::-;;:::i;:::-;;;4824:14:74;;4817:22;4799:41;;4787:2;4772:18;817:224:61;;;;;;;;2077:98:63;;;:::i;:::-;;;;;;;:::i;4174:166::-;;;;;;:::i;:::-;;:::i;3165:106::-;3252:12;;3165:106;;;4997:25:74;;;4985:2;4970:18;3165:106:63;4952:76:74;866:18:5;;;;;-1:-1:-1;;;866:18:5;;;;;;3818:352;;;;;;:::i;:::-;;:::i;5348:121:60:-;;;;;;:::i;:::-;5414:7;5440:12;;;;;;;;;;:22;;;;5348:121;568:24:5;;;;;;;;-1:-1:-1;;;;;568:24:5;;;;;;-1:-1:-1;;;;;3667:32:74;;;;3649:51;;3637:2;3622:18;568:24:5;3604:102:74;2156:162:61;;;;;;:::i;:::-;;:::i;:::-;;3014:91:63;;;3096:2;13851:36:74;;13839:2;13824:18;3014:91:63;13806:87:74;2663:171:61;;;;;;:::i;:::-;;:::i;5616:212:63:-;;;;;;:::i;:::-;;:::i;2443:175:68:-;;;:::i;2853:109:5:-;;;;;;:::i;:::-;;:::i;487:89:65:-;;;;;;:::i;:::-;;:::i;1042:84:62:-;1112:7;;;;1042:84;;664:21:5;;;;;-1:-1:-1;;;;;664:21:5;;;5097:266;;;;;;:::i;:::-;;:::i;882:327:65:-;;;;;;:::i;:::-;;:::i;2067:169:68:-;;;:::i;758:25:5:-;;;;;-1:-1:-1;;;758:25:5;;;;;;;;;13686:10:74;13674:23;;;13656:42;;13644:2;13629:18;758:25:5;13611:93:74;1626:143:61;;;;;;:::i;:::-;;:::i;4374:137:60:-;;;;;;:::i;:::-;4452:4;4475:12;;;;;;;;;;;-1:-1:-1;;;;;4475:29:60;;;;;;;;;;;;;;;4374:137;2288:102:63;;;:::i;2394:49:60:-;;2439:4;2394:49;;6315:371:63;;;;;;:::i;:::-;;:::i;1819:307:5:-;;;;;;:::i;:::-;;:::i;3657:172:63:-;;;;;;:::i;:::-;;:::i;1937:132:61:-;;;;;;:::i;:::-;;:::i;929:62:68:-;;967:24;929:62;;2406:167:61;;;;;;:::i;:::-;;:::i;3887:149:63:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4002:18:63;;;3976:7;4002:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3887:149;997:62:68;;1035:24;997:62;;817:224:61;902:4;-1:-1:-1;;;;;;;;;925:57:61;;;;:109;;;998:36;1022:11;998:23;:36::i;:::-;918:116;;817:224;;;;:::o;2077:98:63:-;2131:13;2163:5;2156:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2077:98;:::o;4174:166::-;4257:4;4273:39;665:10:69;4296:7:63;4305:6;4273:8;:39::i;:::-;-1:-1:-1;4329:4:63;4174:166;;;;;:::o;3818:352:5:-;3969:9;;3932:4;;-1:-1:-1;;;;;3948:31:5;;;3969:9;;;;;3948:31;:67;;;;-1:-1:-1;4005:9:5;;;;;-1:-1:-1;;;;;4005:9:5;3983:10;:32;3948:67;3944:222;;;4025:42;4041:6;4049:9;4060:6;4025:15;:42::i;:::-;-1:-1:-1;4082:4:5;4075:11;;3944:222;4114:45;4133:6;4141:9;4152:6;4114:18;:45::i;:::-;4107:52;;3944:222;3818:352;;;;;:::o;2156:162:61:-;2240:30;2256:4;2262:7;2240:15;:30::i;:::-;2280:18;;;;:12;:18;;;;;:31;;2303:7;2280:22;:31::i;:::-;;2156:162;;:::o;2663:171::-;2750:33;2769:4;2775:7;2750:18;:33::i;:::-;2793:18;;;;:12;:18;;;;;:34;;2819:7;2793:25;:34::i;5616:212:63:-;665:10:69;5704:4:63;5752:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5752:34:63;;;;;;;;;;5704:4;;5720:80;;5752:34;;:47;;5789:10;;5752:47;:::i;:::-;5720:8;:80::i;2443:175:68:-;2495:34;1035:24;665:10:69;2516:12:68;586:96:69;2495:34:68;2487:104;;;;-1:-1:-1;;;2487:104:68;;7543:2:74;2487:104:68;;;7525:21:74;7582:2;7562:18;;;7555:30;7621:34;7601:18;;;7594:62;7692:27;7672:18;;;7665:55;7737:19;;2487:104:68;;;;;;;;;2601:10;:8;:10::i;:::-;2443:175::o;2853:109:5:-;2917:40;2946:2;2950:6;2917:28;:40::i;:::-;2853:109;;:::o;487:89:65:-;542:27;665:10:69;562:6:65;542:5;:27::i;:::-;487:89;:::o;5097:266:5:-;5243:9;;5323:11;;5232:126;;-1:-1:-1;;;5232:126:5;;-1:-1:-1;;;;;4496:32:74;;;5232:126:5;;;4478:51:74;-1:-1:-1;;;5323:11:5;;;;4545:18:74;;;4538:51;-1:-1:-1;;;5344:6:5;;;;;4632:14:74;4625:22;4605:18;;;4598:50;5171:7:5;;5243:9;;;;;;;5232:64;;4451:18:74;;5232:126:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3429:18:63;;3403:7;3429:18;;;:9;:18;;;;;;5199:159:5;;;;:::i;882:327:65:-;958:24;985:32;995:7;665:10:69;1004:12:65;586:96:69;985:32:65;958:59;;1055:6;1035:16;:26;;1027:75;;;;-1:-1:-1;;;1027:75:65;;9956:2:74;1027:75:65;;;9938:21:74;9995:2;9975:18;;;9968:30;10034:34;10014:18;;;10007:62;-1:-1:-1;;;10085:18:74;;;10078:34;10129:19;;1027:75:65;9928:226:74;1027:75:65;1112:58;1121:7;665:10:69;1144:25:65;1163:6;1144:16;:25;:::i;1112:58::-;1180:22;1186:7;1195:6;1180:5;:22::i;2067:169:68:-;2117:34;1035:24;665:10:69;2138:12:68;586:96:69;2117:34:68;2109:102;;;;-1:-1:-1;;;2109:102:68;;11926:2:74;2109:102:68;;;11908:21:74;11965:2;11945:18;;;11938:30;12004:34;11984:18;;;11977:62;12075:25;12055:18;;;12048:53;12118:19;;2109:102:68;11898:245:74;2109:102:68;2221:8;:6;:8::i;1626:143:61:-;1708:7;1734:18;;;:12;:18;;;;;:28;;1756:5;1734:21;:28::i;2288:102:63:-;2344:13;2376:7;2369:14;;;;;:::i;6315:371::-;665:10:69;6408:4:63;6451:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6451:34:63;;;;;;;;;;6503:35;;;;6495:85;;;;-1:-1:-1;;;6495:85:63;;12350:2:74;6495:85:63;;;12332:21:74;12389:2;12369:18;;;12362:30;12428:34;12408:18;;;12401:62;-1:-1:-1;;;12479:18:74;;;12472:35;12524:19;;6495:85:63;12322:227:74;6495:85:63;6590:67;665:10:69;6613:7:63;6622:34;6641:15;6622:16;:34;:::i;6590:67::-;-1:-1:-1;6675:4:63;;6315:371;-1:-1:-1;;;6315:371:63:o;1819:307:5:-;2049:6;;2013:52;;2029:10;;-1:-1:-1;;;;;2049:6:5;2058;2013:15;:52::i;:::-;2080:6;;2072:49;;-1:-1:-1;;;2072:49:5;;2102:10;2072:49;;;3885:51:74;3952:18;;;3945:34;;;-1:-1:-1;;;;;2080:6:5;;;;2072:29;;3858:18:74;;2072:49:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:307;:::o;3657:172:63:-;3743:4;3759:42;665:10:69;3783:9:63;3794:6;3759:9;:42::i;1937:132:61:-;2009:7;2035:18;;;:12;:18;;;;;:27;;:25;:27::i;2406:167::-;2491:31;2508:4;2514:7;2491:16;:31::i;7515:110:60:-;7593:25;7604:4;7610:7;7593:10;:25::i;6430:150:73:-;6500:4;6523:50;6528:3;-1:-1:-1;;;;;6548:23:73;;6523:4;:50::i;4073:214:60:-;4158:4;-1:-1:-1;;;;;;;;;4181:47:60;;;;:99;;-1:-1:-1;;;;;;;871:40:71;;-1:-1:-1;;;871:40:71;4244:36:60;763:155:71;9579:340:63;-1:-1:-1;;;;;9680:19:63;;9672:68;;;;-1:-1:-1;;;9672:68:63;;11521:2:74;9672:68:63;;;11503:21:74;11560:2;11540:18;;;11533:30;11599:34;11579:18;;;11572:62;-1:-1:-1;;;11650:18:74;;;11643:34;11694:19;;9672:68:63;11493:226:74;9672:68:63;-1:-1:-1;;;;;9758:21:63;;9750:68;;;;-1:-1:-1;;;9750:68:63;;7969:2:74;9750:68:63;;;7951:21:74;8008:2;7988:18;;;7981:30;8047:34;8027:18;;;8020:62;-1:-1:-1;;;8098:18:74;;;8091:32;8140:19;;9750:68:63;7941:224:74;9750:68:63;-1:-1:-1;;;;;9829:18:63;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9880:32;;4997:25:74;;;9880:32:63;;4970:18:74;9880:32:63;;;;;;;;9579:340;;;:::o;7160:592::-;-1:-1:-1;;;;;7265:20:63;;7257:70;;;;-1:-1:-1;;;7257:70:63;;10763:2:74;7257:70:63;;;10745:21:74;10802:2;10782:18;;;10775:30;10841:34;10821:18;;;10814:62;-1:-1:-1;;;10892:18:74;;;10885:35;10937:19;;7257:70:63;10735:227:74;7257:70:63;-1:-1:-1;;;;;7345:23:63;;7337:71;;;;-1:-1:-1;;;7337:71:63;;6387:2:74;7337:71:63;;;6369:21:74;6426:2;6406:18;;;6399:30;6465:34;6445:18;;;6438:62;-1:-1:-1;;;6516:18:74;;;6509:33;6559:19;;7337:71:63;6359:225:74;7337:71:63;7419:47;7440:6;7448:9;7459:6;7419:20;:47::i;:::-;-1:-1:-1;;;;;7501:17:63;;7477:21;7501:17;;;:9;:17;;;;;;7536:23;;;;7528:74;;;;-1:-1:-1;;;7528:74:63;;8372:2:74;7528:74:63;;;8354:21:74;8411:2;8391:18;;;8384:30;8450:34;8430:18;;;8423:62;-1:-1:-1;;;8501:18:74;;;8494:36;8547:19;;7528:74:63;8344:228:74;7528:74:63;7632:22;7648:6;7632:13;:22;:::i;:::-;-1:-1:-1;;;;;7612:17:63;;;;;;;:9;:17;;;;;;:42;;;;7664:20;;;;;;;;:30;;7688:6;;7612:17;7664:30;;7688:6;;7664:30;:::i;:::-;;;;-1:-1:-1;;7710:35:63;;4997:25:74;;;-1:-1:-1;;;;;7710:35:63;;;;;;;;;;4985:2:74;4970:18;7710:35:63;;;;;;;7160:592;;;;:::o;4807:414::-;4913:4;4929:36;4939:6;4947:9;4958:6;4929:9;:36::i;:::-;-1:-1:-1;;;;;5003:19:63;;4976:24;5003:19;;;:11;:19;;;;;;;;665:10:69;5003:33:63;;;;;;;;5054:26;;;;5046:79;;;;-1:-1:-1;;;5046:79:63;;9124:2:74;5046:79:63;;;9106:21:74;9163:2;9143:18;;;9136:30;9202:34;9182:18;;;9175:62;-1:-1:-1;;;9253:18:74;;;9246:38;9301:19;;5046:79:63;9096:230:74;5046:79:63;5135:57;5144:6;665:10:69;5166:25:63;5185:6;5166:16;:25;:::i;5135:57::-;-1:-1:-1;5210:4:63;;4807:414;-1:-1:-1;;;;4807:414:63:o;5719:145:60:-;5414:7;5440:12;;;;;;;;;;:22;;;3958:30;3969:4;665:10:69;3975:12:60;3958:10;:30::i;:::-;5832:25:::1;5843:4;5849:7;5832:10;:25::i;6736:214::-:0;665:10:69;-1:-1:-1;;;;;6831:23:60;;;6823:83;;;;-1:-1:-1;;;6823:83:60;;12756:2:74;6823:83:60;;;12738:21:74;12795:2;12775:18;;;12768:30;12834:34;12814:18;;;12807:62;-1:-1:-1;;;12885:18:74;;;12878:45;12940:19;;6823:83:60;12728:237:74;6823:83:60;6917:26;6929:4;6935:7;6917:11;:26::i;6748:156:73:-;6821:4;6844:53;6852:3;-1:-1:-1;;;;;6872:23:73;;6844:7;:53::i;2054:117:62:-;1112:7;;;;1613:41;;;;-1:-1:-1;;;1613:41:62;;6791:2:74;1613:41:62;;;6773:21:74;6830:2;6810:18;;;6803:30;-1:-1:-1;;;6849:18:74;;;6842:50;6909:18;;1613:41:62;6763:170:74;1613:41:62;2112:7:::1;:15:::0;;-1:-1:-1;;2112:15:62::1;::::0;;2142:22:::1;665:10:69::0;2151:12:62::1;2142:22;::::0;;-1:-1:-1;;;;;3667:32:74;;;;3649:51;;2142:22:62;;;;;3637:2:74;2142:22:62;;::::1;2054:117::o:0;1662:202:68:-;1737:34;967:24;665:10:69;1758:12:68;586:96:69;1737:34:68;1729:101;;;;-1:-1:-1;;;1729:101:68;;9533:2:74;1729:101:68;;;9515:21:74;9572:2;9552:18;;;9545:30;9611:34;9591:18;;;9584:62;-1:-1:-1;;;9662:18:74;;;9655:52;9724:19;;1729:101:68;9505:244:74;1729:101:68;1840:17;1846:2;1850:6;1840:5;:17::i;3239:179:5:-;3341:9;;;;;-1:-1:-1;;;;;3341:9:5;3319:10;:32;3311:68;;;;-1:-1:-1;;;3311:68:5;;11169:2:74;3311:68:5;;;11151:21:74;11208:2;11188:18;;;11181:30;11247:25;11227:18;;;11220:53;11290:18;;3311:68:5;11141:173:74;3311:68:5;3385:28;3397:7;3406:6;3385:11;:28::i;1807:115:62:-;1112:7;;;;1355:9;1347:38;;;;-1:-1:-1;;;1347:38:62;;8779:2:74;1347:38:62;;;8761:21:74;8818:2;8798:18;;;8791:30;-1:-1:-1;;;8837:18:74;;;8830:46;8893:18;;1347:38:62;8751:166:74;1347:38:62;1866:7:::1;:14:::0;;-1:-1:-1;;1866:14:62::1;1876:4;1866:14;::::0;;1895:20:::1;1902:12;665:10:69::0;586:96;;7678:156:73;7752:7;7802:22;7806:3;7818:5;7802:3;:22::i;7231:115::-;7294:7;7320:19;7328:3;4096:18;;4014:107;6098:147:60;5414:7;5440:12;;;;;;;;;;:22;;;3958:30;3969:4;665:10:69;3975:12:60;586:96:69;3958:30:60;6212:26:::1;6224:4;6230:7;6212:11;:26::i;7948:224::-:0;4452:4;4475:12;;;;;;;;;;;-1:-1:-1;;;;;4475:29:60;;;;;;;;;;;;8017:149;;8060:6;:12;;;;;;;;;;;-1:-1:-1;;;;;8060:29:60;;;;;;;;;;:36;;-1:-1:-1;;8060:36:60;-1:-1:-1;8060:36:60;;;8115:40;665:10:69;;8060:12:60;;8115:40;;8060:6;8115:40;7948:224;;:::o;1632:404:73:-;1695:4;3902:19;;;:12;;;:19;;;;;;1711:319;;-1:-1:-1;1753:23:73;;;;;;;;:11;:23;;;;;;;;;;;;;1933:18;;1911:19;;;:12;;;:19;;;;;;:40;;;;1965:11;;1711:319;-1:-1:-1;2014:5:73;2007:12;;4557:242:5;4683:9;;-1:-1:-1;;;;;4665:28:5;;;4683:9;;;;;4665:28;4661:134;;4714:9;;4776:11;;4703:85;;-1:-1:-1;;;4703:85:5;;-1:-1:-1;;;;;4180:32:74;;;4703:85:5;;;4162:51:74;-1:-1:-1;;;4776:11:5;;;;;4229:18:74;;;4222:51;4714:9:5;;;;;;4703:64;;4135:18:74;;4703:85:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4557:242;;;:::o;4792:375:60:-;4452:4;4475:12;;;;;;;;;;;-1:-1:-1;;;;;4475:29:60;;;;;;;;;;;;4867:294;;5000:41;-1:-1:-1;;;;;5000:41:60;;5038:2;5000:19;:41::i;:::-;5096:38;5124:4;5131:2;5096:19;:38::i;:::-;4923:225;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;4923:225:60;;;;;;;-1:-1:-1;;;4909:241:60;;;;;;;:::i;8178:225::-;4452:4;4475:12;;;;;;;;;;;-1:-1:-1;;;;;4475:29:60;;;;;;;;;;;;8248:149;;;8322:5;8290:12;;;;;;;;;;;-1:-1:-1;;;;;8290:29:60;;;;;;;;;;:37;;-1:-1:-1;;8290:37:60;;;8346:40;665:10:69;;8290:12:60;;8346:40;;8322:5;8346:40;8178:225;;:::o;2204:1521:73:-;2270:4;2407:19;;;:12;;;:19;;;;;;2441:15;;2437:1282;;2798:21;2822:14;2835:1;2822:10;:14;:::i;:::-;2870:18;;2798:38;;-1:-1:-1;2850:17:73;;2870:22;;2891:1;;2870:22;:::i;:::-;2850:42;;3132:17;3152:3;:11;;3164:9;3152:22;;;;;;-1:-1:-1;;;3152:22:73;;;;;;;;;;;;;;;;;3132:42;;3295:9;3266:3;:11;;3278:13;3266:26;;;;;;-1:-1:-1;;;3266:26:73;;;;;;;;;;;;;;;;;;;;:38;;;;3370:23;;;:12;;;:23;;;;;;:36;;;3528:17;;3370:3;;3528:17;;;-1:-1:-1;;;3528:17:73;;;;;;;;;;;;;;;;;;;;;;;;;;3620:3;:12;;:19;3633:5;3620:19;;;;;;;;;;;3613:26;;;3661:4;3654:11;;;;;;;;2437:1282;3703:5;3696:12;;;;;8023:330:63;-1:-1:-1;;;;;8106:21:63;;8098:65;;;;-1:-1:-1;;;8098:65:63;;13172:2:74;8098:65:63;;;13154:21:74;13211:2;13191:18;;;13184:30;13250:33;13230:18;;;13223:61;13301:18;;8098:65:63;13144:181:74;8098:65:63;8174:49;8203:1;8207:7;8216:6;8174:20;:49::i;:::-;8250:6;8234:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8266:18:63;;;;;;:9;:18;;;;;:28;;8288:6;;8266:18;:28;;8288:6;;8266:28;:::i;:::-;;;;-1:-1:-1;;8309:37:63;;;4997:25:74;;;8309:37:63;;-1:-1:-1;;;;;8309:37:63;;;8326:1;;8309:37;;;;;4985:2:74;8309:37:63;;;8023:330;;:::o;8673:483::-;-1:-1:-1;;;;;8756:21:63;;8748:67;;;;-1:-1:-1;;;8748:67:63;;10361:2:74;8748:67:63;;;10343:21:74;10400:2;10380:18;;;10373:30;10439:34;10419:18;;;10412:62;-1:-1:-1;;;10490:18:74;;;10483:31;10531:19;;8748:67:63;10333:223:74;8748:67:63;8826:49;8847:7;8864:1;8868:6;8826:20;:49::i;:::-;-1:-1:-1;;;;;8911:18:63;;8886:22;8911:18;;;:9;:18;;;;;;8947:24;;;;8939:71;;;;-1:-1:-1;;;8939:71:63;;7140:2:74;8939:71:63;;;7122:21:74;7179:2;7159:18;;;7152:30;7218:34;7198:18;;;7191:62;-1:-1:-1;;;7269:18:74;;;7262:32;7311:19;;8939:71:63;7112:224:74;8939:71:63;9041:23;9058:6;9041:14;:23;:::i;:::-;-1:-1:-1;;;;;9020:18:63;;;;;;:9;:18;;;;;:44;;;;9074:12;:22;;9090:6;;9020:18;9074:22;;9090:6;;9074:22;:::i;:::-;;;;-1:-1:-1;;9112:37:63;;4997:25:74;;;9138:1:63;;-1:-1:-1;;;;;9112:37:63;;;;;4985:2:74;4970:18;9112:37:63;4952:76:74;4453:201:73;4547:18;;4520:7;;4547:26;-1:-1:-1;4539:73:73;;;;-1:-1:-1;;;4539:73:73;;5623:2:74;4539:73:73;;;5605:21:74;5662:2;5642:18;;;5635:30;5701:34;5681:18;;;5674:62;-1:-1:-1;;;5752:18:74;;;5745:32;5794:19;;4539:73:73;5595:224:74;4539:73:73;4629:3;:11;;4641:5;4629:18;;;;;;-1:-1:-1;;;4629:18:73;;;;;;;;;;;;;;;;;4622:25;;4453:201;;;;:::o;1531:437:70:-;1606:13;1631:19;1663:10;1667:6;1663:1;:10;:::i;:::-;:14;;1676:1;1663:14;:::i;:::-;1653:25;;;;;;-1:-1:-1;;;1653:25:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1653:25:70;;1631:47;;-1:-1:-1;;;1688:6:70;1695:1;1688:9;;;;;;-1:-1:-1;;;1688:9:70;;;;;;;;;-1:-1:-1;;;;;;1688:15:70;;;;;;;;;:9;;;:15;;-1:-1:-1;;;1713:6:70;1720:1;1713:9;;;;;;-1:-1:-1;;;1713:9:70;;;;;;;;;-1:-1:-1;;;;;;1713:15:70;;;;;;;;;:9;;;:15;-1:-1:-1;1743:9:70;1755:10;1759:6;1755:1;:10;:::i;:::-;:14;;1768:1;1755:14;:::i;:::-;1743:26;;1738:128;1775:1;1771;:5;1738:128;;;-1:-1:-1;;;1826:3:70;1818:11;;1809:21;;;;;-1:-1:-1;;;1809:21:70;;;;;;;;;;;;1797:6;1804:1;1797:9;;;;;;-1:-1:-1;;;1797:9:70;;;;;;;;;-1:-1:-1;;;;;;1797:33:70;;;;;;;;;:9;;;:33;-1:-1:-1;1854:1:70;1844:11;;;;;1778:3;;;:::i;:::-;;;1738:128;;;-1:-1:-1;1883:10:70;;1875:55;;;;-1:-1:-1;;;1875:55:70;;6026:2:74;1875:55:70;;;6008:21:74;;;6045:18;;;6038:30;6104:34;6084:18;;;6077:62;6156:18;;1875:55:70;5998:182:74;14:173;82:20;;-1:-1:-1;;;;;131:31:74;;121:42;;111:2;;177:1;174;167:12;192:196;;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;353:29;372:9;353:29;:::i;393:270::-;;;522:2;510:9;501:7;497:23;493:32;490:2;;;543:6;535;528:22;490:2;571:29;590:9;571:29;:::i;:::-;561:39;;619:38;653:2;642:9;638:18;619:38;:::i;:::-;609:48;;480:183;;;;;:::o;668:338::-;;;;814:2;802:9;793:7;789:23;785:32;782:2;;;835:6;827;820:22;782:2;863:29;882:9;863:29;:::i;:::-;853:39;;911:38;945:2;934:9;930:18;911:38;:::i;:::-;901:48;;996:2;985:9;981:18;968:32;958:42;;772:234;;;;;:::o;1011:264::-;;;1140:2;1128:9;1119:7;1115:23;1111:32;1108:2;;;1161:6;1153;1146:22;1108:2;1189:29;1208:9;1189:29;:::i;:::-;1179:39;1265:2;1250:18;;;;1237:32;;-1:-1:-1;;;1098:177:74:o;1280:190::-;;1392:2;1380:9;1371:7;1367:23;1363:32;1360:2;;;1413:6;1405;1398:22;1360:2;-1:-1:-1;1441:23:74;;1350:120;-1:-1:-1;1350:120:74:o;1475:264::-;;;1604:2;1592:9;1583:7;1579:23;1575:32;1572:2;;;1625:6;1617;1610:22;1572:2;1666:9;1653:23;1643:33;;1695:38;1729:2;1718:9;1714:18;1695:38;:::i;1744:258::-;;;1873:2;1861:9;1852:7;1848:23;1844:32;1841:2;;;1894:6;1886;1879:22;1841:2;-1:-1:-1;;1922:23:74;;;1992:2;1977:18;;;1964:32;;-1:-1:-1;1831:171:74:o;2007:306::-;;2118:2;2106:9;2097:7;2093:23;2089:32;2086:2;;;2139:6;2131;2124:22;2086:2;2170:23;;-1:-1:-1;;;;;;2222:32:74;;2212:43;;2202:2;;2274:6;2266;2259:22;2513:194;;2636:2;2624:9;2615:7;2611:23;2607:32;2604:2;;;2657:6;2649;2642:22;2604:2;-1:-1:-1;2685:16:74;;2594:113;-1:-1:-1;2594:113:74:o;2712:786::-;;3123:25;3118:3;3111:38;3178:6;3172:13;3194:62;3249:6;3244:2;3239:3;3235:12;3228:4;3220:6;3216:17;3194:62;:::i;:::-;-1:-1:-1;;;3315:2:74;3275:16;;;3307:11;;;3300:40;3365:13;;3387:63;3365:13;3436:2;3428:11;;3421:4;3409:17;;3387:63;:::i;:::-;3470:17;3489:2;3466:26;;3101:397;-1:-1:-1;;;;3101:397:74:o;5033:383::-;;5182:2;5171:9;5164:21;5214:6;5208:13;5257:6;5252:2;5241:9;5237:18;5230:34;5273:66;5332:6;5327:2;5316:9;5312:18;5307:2;5299:6;5295:15;5273:66;:::i;:::-;5400:2;5379:15;-1:-1:-1;;5375:29:74;5360:45;;;;5407:2;5356:54;;5154:262;-1:-1:-1;;5154:262:74:o;13898:128::-;;13969:1;13965:6;13962:1;13959:13;13956:2;;;13975:18;;:::i;:::-;-1:-1:-1;14011:9:74;;13946:80::o;14031:168::-;;14137:1;14133;14129:6;14125:14;14122:1;14119:21;14114:1;14107:9;14100:17;14096:45;14093:2;;;14144:18;;:::i;:::-;-1:-1:-1;14184:9:74;;14083:116::o;14204:125::-;;14272:1;14269;14266:8;14263:2;;;14277:18;;:::i;:::-;-1:-1:-1;14314:9:74;;14253:76::o;14334:258::-;14406:1;14416:113;14430:6;14427:1;14424:13;14416:113;;;14506:11;;;14500:18;14487:11;;;14480:39;14452:2;14445:10;14416:113;;;14547:6;14544:1;14541:13;14538:2;;;14582:1;14573:6;14568:3;14564:16;14557:27;14538:2;;14387:205;;;:::o;14597:136::-;;14664:5;14654:2;;14673:18;;:::i;:::-;-1:-1:-1;;;14709:18:74;;14644:89::o;14738:380::-;14817:1;14813:12;;;;14860;;;14881:2;;14935:4;14927:6;14923:17;14913:27;;14881:2;14988;14980:6;14977:14;14957:18;14954:38;14951:2;;;15034:10;15029:3;15025:20;15022:1;15015:31;15069:4;15066:1;15059:15;15097:4;15094:1;15087:15;14951:2;;14793:325;;;:::o;15123:127::-;15184:10;15179:3;15175:20;15172:1;15165:31;15215:4;15212:1;15205:15;15239:4;15236:1;15229:15",
  "source": "// SPDX-License-Identifier: BUSL-1.1\n\npragma solidity 0.8.3;\n\nimport \"./interfaces/IStaker.sol\";\nimport \"./interfaces/ILongShort.sol\";\nimport \"./interfaces/ISyntheticToken.sol\";\n\n/**\n@title SyntheticToken\n@notice An ERC20 token that tracks or inversely tracks the price of an\n        underlying asset with floating exposure.\n@dev Logic for price tracking contained in LongShort.sol. \n     The contract inherits from ERC20PresetMinterPauser.sol\n*/\ncontract SyntheticToken is ISyntheticToken {\n  /// @notice Address of the LongShort contract, a deployed LongShort.sol\n  address public longShort;\n  /// @notice Address of the Staker contract, a deployed Staker.sol\n  address public staker;\n  /// @notice Identifies which market in longShort the token is for.\n  uint32 public marketIndex;\n  /// @notice Whether the token is a long token or short token for its market.\n  bool public isLong;\n\n  /// @notice Creates an instance of the contract.\n  /// @dev Should only be called by TokenFactory.sol for our system.\n  /// @param name The name of the token.\n  /// @param symbol The symbol for the token.\n  /// @param _longShort Address of the core LongShort contract.\n  /// @param _staker Address of the staker contract.\n  /// @param _marketIndex Which market the token is for.\n  /// @param _isLong Whether the token is long or short for its market.\n  constructor(\n    string memory name,\n    string memory symbol,\n    address _longShort,\n    address _staker,\n    uint32 _marketIndex,\n    bool _isLong\n  ) ERC20PresetMinterPauser(name, symbol) {\n    longShort = _longShort;\n    staker = _staker;\n    marketIndex = _marketIndex;\n    isLong = _isLong;\n  }\n\n  /// @notice Allows users to stake their synthetic tokens to earn Float.\n  /// @dev Core staking logic contained in Staker.sol\n  /// @param amount Amount to stake in wei.\n  function stake(uint256 amount) external override {\n    // NOTE: this is safe, this function will throw \"ERC20: transfer\n    //       amount exceeds balance\" if amount exceeds users balance.\n    super._transfer(msg.sender, address(staker), amount);\n\n    IStaker(staker).stakeFromUser(msg.sender, amount);\n  }\n\n  /*╔══════════════════════════════════════════════════════╗\n    ║    FUNCTIONS INHERITED BY ERC20PresetMinterPauser    ║\n    ╚══════════════════════════════════════════════════════╝*/\n\n  /** \n  @notice Mints a number of synthetic tokens for an address.\n  @dev Can only be called by addresses with a minter role. \n        This should correspond to the Long Short contract.\n  @param to The address for which to mint the tokens for.\n  @param amount Amount of synthetic tokens to mint in wei.\n  */\n  function mint(address to, uint256 amount) public override {\n    ERC20PresetMinterPauser.mint(to, amount);\n  }\n\n  /// @notice Burns or destroys a number of held synthetic tokens for an address.\n  /// @dev Modified to only allow Long Short to burn tokens on redeem.\n  /// @param account The account for which to burn tokens for.\n  /// @param amount The amount of tokens to burn in wei.\n  function _burn(address account, uint256 amount) internal override {\n    require(msg.sender == address(longShort), \"Only LongShort contract\");\n    super._burn(account, amount);\n  }\n\n  /** \n  @notice Overrides the default ERC20 transferFrom.\n  @dev To allow users to avoid approving LongShort.sol when redeeming tokens,\n        longShort has a virtual infinite allowance when transfering tokens\n        to itself.\n  @param sender User for which to transfer tokens.\n  @param recipient Recipient of the transferred tokens.\n  @param amount Amount of tokens to transfer in wei.\n  */\n  function transferFrom(\n    address sender,\n    address recipient,\n    uint256 amount\n  ) public override returns (bool) {\n    if (recipient == address(longShort) && msg.sender == address(longShort)) {\n      super._transfer(sender, recipient, amount);\n      return true;\n    } else {\n      return super.transferFrom(sender, recipient, amount);\n    }\n  }\n\n  /** \n  @notice Overrides the OpenZeppelin _beforeTokenTransfer hook\n  @dev Ensures that this contract's accounting reflects all the senders's outstanding\n       tokens from next price actions before any token transfer occurs.\n       Removal of pausing functionality of ERC20PresetMinterPausable is intentional.\n  @param sender User for which tokens are to be transferred for.\n  */\n  function _beforeTokenTransfer(\n    address sender,\n    address,\n    uint256\n  ) internal override {\n    if (sender != address(longShort)) {\n      ILongShort(longShort).executeOutstandingNextPriceSettlementsUser(sender, marketIndex);\n    }\n  }\n\n  /** \n  @notice Gets the synthetic token balance of the user in wei.\n  @dev To automatically account for next price actions which have been confirmed but not settled,\n        includes any outstanding tokens owed by longShort.\n  @param account The address for which to get the balance of.\n  */\n  function balanceOf(address account) public view virtual override returns (uint256) {\n    return\n      ERC20.balanceOf(account) +\n      ILongShort(longShort).getUsersConfirmedButNotSettledSynthBalance(\n        account,\n        marketIndex,\n        isLong\n      );\n  }\n}\n",
  "sourcePath": "/home/jasoons/Documents/code/monorepo/contracts/contracts/SyntheticToken.sol",
  "ast": {
    "absolutePath": "/home/jasoons/Documents/code/monorepo/contracts/contracts/SyntheticToken.sol",
    "exportedSymbols": {
      "AccessControl": [
        16973
      ],
      "AccessControlEnumerable": [
        17163
      ],
      "Context": [
        18122
      ],
      "ERC165": [
        18349
      ],
      "ERC20": [
        17762
      ],
      "ERC20Burnable": [
        17901
      ],
      "ERC20Pausable": [
        17938
      ],
      "ERC20PresetMinterPauser": [
        18099
      ],
      "EnumerableSet": [
        18874
      ],
      "IAccessControl": [
        16649
      ],
      "IAccessControlEnumerable": [
        16995
      ],
      "IERC165": [
        18361
      ],
      "IERC20": [
        17840
      ],
      "IERC20Metadata": [
        17963
      ],
      "ILongShort": [
        5902
      ],
      "IStaker": [
        5959
      ],
      "ISyntheticToken": [
        5972
      ],
      "Pausable": [
        17255
      ],
      "Strings": [
        18325
      ],
      "SyntheticToken": [
        5201
      ]
    },
    "id": 5202,
    "license": "BUSL-1.1",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4971,
        "literals": [
          "solidity",
          "0.8",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "38:22:5"
      },
      {
        "absolutePath": "/home/jasoons/Documents/code/monorepo/contracts/contracts/interfaces/IStaker.sol",
        "file": "./interfaces/IStaker.sol",
        "id": 4972,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5202,
        "sourceUnit": 5960,
        "src": "62:34:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jasoons/Documents/code/monorepo/contracts/contracts/interfaces/ILongShort.sol",
        "file": "./interfaces/ILongShort.sol",
        "id": 4973,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5202,
        "sourceUnit": 5903,
        "src": "97:37:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jasoons/Documents/code/monorepo/contracts/contracts/interfaces/ISyntheticToken.sol",
        "file": "./interfaces/ISyntheticToken.sol",
        "id": 4974,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5202,
        "sourceUnit": 5973,
        "src": "135:42:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4976,
              "name": "ISyntheticToken",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5972,
              "src": "474:15:5"
            },
            "id": 4977,
            "nodeType": "InheritanceSpecifier",
            "src": "474:15:5"
          }
        ],
        "contractDependencies": [
          5972,
          16649,
          16973,
          16995,
          17163,
          17255,
          17762,
          17840,
          17901,
          17938,
          17963,
          18099,
          18122,
          18349,
          18361
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 4975,
          "nodeType": "StructuredDocumentation",
          "src": "179:267:5",
          "text": "@title SyntheticToken\n@notice An ERC20 token that tracks or inversely tracks the price of an\nunderlying asset with floating exposure.\n@dev Logic for price tracking contained in LongShort.sol. \nThe contract inherits from ERC20PresetMinterPauser.sol"
        },
        "fullyImplemented": true,
        "id": 5201,
        "linearizedBaseContracts": [
          5201,
          5972,
          18099,
          17938,
          17255,
          17901,
          17762,
          17963,
          17840,
          17163,
          16973,
          18349,
          18361,
          16649,
          18122,
          16995
        ],
        "name": "SyntheticToken",
        "nameLocation": "456:14:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 4978,
              "nodeType": "StructuredDocumentation",
              "src": "494:71:5",
              "text": "@notice Address of the LongShort contract, a deployed LongShort.sol"
            },
            "functionSelector": "29949872",
            "id": 4980,
            "mutability": "mutable",
            "name": "longShort",
            "nameLocation": "583:9:5",
            "nodeType": "VariableDeclaration",
            "scope": 5201,
            "src": "568:24:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4979,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "568:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4981,
              "nodeType": "StructuredDocumentation",
              "src": "596:65:5",
              "text": "@notice Address of the Staker contract, a deployed Staker.sol"
            },
            "functionSelector": "5ebaf1db",
            "id": 4983,
            "mutability": "mutable",
            "name": "staker",
            "nameLocation": "679:6:5",
            "nodeType": "VariableDeclaration",
            "scope": 5201,
            "src": "664:21:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4982,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "664:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4984,
              "nodeType": "StructuredDocumentation",
              "src": "689:66:5",
              "text": "@notice Identifies which market in longShort the token is for."
            },
            "functionSelector": "8c7adc15",
            "id": 4986,
            "mutability": "mutable",
            "name": "marketIndex",
            "nameLocation": "772:11:5",
            "nodeType": "VariableDeclaration",
            "scope": 5201,
            "src": "758:25:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 4985,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "758:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4987,
              "nodeType": "StructuredDocumentation",
              "src": "787:76:5",
              "text": "@notice Whether the token is a long token or short token for its market."
            },
            "functionSelector": "202a61a1",
            "id": 4989,
            "mutability": "mutable",
            "name": "isLong",
            "nameLocation": "878:6:5",
            "nodeType": "VariableDeclaration",
            "scope": 5201,
            "src": "866:18:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4988,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "866:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 5025,
              "nodeType": "Block",
              "src": "1534:109:5",
              "statements": [
                {
                  "expression": {
                    "id": 5011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5009,
                      "name": "longShort",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4980,
                      "src": "1540:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5010,
                      "name": "_longShort",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4996,
                      "src": "1552:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1540:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5012,
                  "nodeType": "ExpressionStatement",
                  "src": "1540:22:5"
                },
                {
                  "expression": {
                    "id": 5015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5013,
                      "name": "staker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4983,
                      "src": "1568:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5014,
                      "name": "_staker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4998,
                      "src": "1577:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1568:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5016,
                  "nodeType": "ExpressionStatement",
                  "src": "1568:16:5"
                },
                {
                  "expression": {
                    "id": 5019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5017,
                      "name": "marketIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4986,
                      "src": "1590:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5018,
                      "name": "_marketIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5000,
                      "src": "1604:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "1590:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 5020,
                  "nodeType": "ExpressionStatement",
                  "src": "1590:26:5"
                },
                {
                  "expression": {
                    "id": 5023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5021,
                      "name": "isLong",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4989,
                      "src": "1622:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5022,
                      "name": "_isLong",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5002,
                      "src": "1631:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1622:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5024,
                  "nodeType": "ExpressionStatement",
                  "src": "1622:16:5"
                }
              ]
            },
            "documentation": {
              "id": 4990,
              "nodeType": "StructuredDocumentation",
              "src": "889:450:5",
              "text": "@notice Creates an instance of the contract.\n @dev Should only be called by TokenFactory.sol for our system.\n @param name The name of the token.\n @param symbol The symbol for the token.\n @param _longShort Address of the core LongShort contract.\n @param _staker Address of the staker contract.\n @param _marketIndex Which market the token is for.\n @param _isLong Whether the token is long or short for its market."
            },
            "id": 5026,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5005,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4992,
                    "src": "1520:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 5006,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4994,
                    "src": "1526:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 5007,
                "modifierName": {
                  "id": 5004,
                  "name": "ERC20PresetMinterPauser",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18099,
                  "src": "1496:23:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "1496:37:5"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5003,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4992,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1373:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 5026,
                  "src": "1359:18:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4991,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1359:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4994,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "1397:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 5026,
                  "src": "1383:20:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4993,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1383:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4996,
                  "mutability": "mutable",
                  "name": "_longShort",
                  "nameLocation": "1417:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 5026,
                  "src": "1409:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4995,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1409:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4998,
                  "mutability": "mutable",
                  "name": "_staker",
                  "nameLocation": "1441:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 5026,
                  "src": "1433:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4997,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1433:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5000,
                  "mutability": "mutable",
                  "name": "_marketIndex",
                  "nameLocation": "1461:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 5026,
                  "src": "1454:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 4999,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1454:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5002,
                  "mutability": "mutable",
                  "name": "_isLong",
                  "nameLocation": "1484:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 5026,
                  "src": "1479:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5001,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1479:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1353:142:5"
            },
            "returnParameters": {
              "id": 5008,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1534:0:5"
            },
            "scope": 5201,
            "src": "1342:301:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5971
            ],
            "body": {
              "id": 5054,
              "nodeType": "Block",
              "src": "1868:258:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5036,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2029:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2029:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 5040,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4983,
                            "src": "2049:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2041:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5038,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2041:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2041:15:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5042,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5029,
                        "src": "2058:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5033,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2013:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_SyntheticToken_$5201_$",
                          "typeString": "type(contract super SyntheticToken)"
                        }
                      },
                      "id": 5035,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17596,
                      "src": "2013:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2013:52:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5044,
                  "nodeType": "ExpressionStatement",
                  "src": "2013:52:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5049,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2102:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2102:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5051,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5029,
                        "src": "2114:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 5046,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4983,
                            "src": "2080:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5045,
                          "name": "IStaker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5959,
                          "src": "2072:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IStaker_$5959_$",
                            "typeString": "type(contract IStaker)"
                          }
                        },
                        "id": 5047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2072:15:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStaker_$5959",
                          "typeString": "contract IStaker"
                        }
                      },
                      "id": 5048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stakeFromUser",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5958,
                      "src": "2072:29:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 5052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2072:49:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5053,
                  "nodeType": "ExpressionStatement",
                  "src": "2072:49:5"
                }
              ]
            },
            "documentation": {
              "id": 5027,
              "nodeType": "StructuredDocumentation",
              "src": "1647:169:5",
              "text": "@notice Allows users to stake their synthetic tokens to earn Float.\n @dev Core staking logic contained in Staker.sol\n @param amount Amount to stake in wei."
            },
            "functionSelector": "a694fc3a",
            "id": 5055,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stake",
            "nameLocation": "1828:5:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5031,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1859:8:5"
            },
            "parameters": {
              "id": 5030,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5029,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1842:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 5055,
                  "src": "1834:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5028,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1834:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1833:16:5"
            },
            "returnParameters": {
              "id": 5032,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1868:0:5"
            },
            "scope": 5201,
            "src": "1819:307:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              18043
            ],
            "body": {
              "id": 5071,
              "nodeType": "Block",
              "src": "2911:51:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5067,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5058,
                        "src": "2946:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5068,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5060,
                        "src": "2950:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5064,
                        "name": "ERC20PresetMinterPauser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18099,
                        "src": "2917:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20PresetMinterPauser_$18099_$",
                          "typeString": "type(contract ERC20PresetMinterPauser)"
                        }
                      },
                      "id": 5066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18043,
                      "src": "2917:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 5069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2917:40:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5070,
                  "nodeType": "ExpressionStatement",
                  "src": "2917:40:5"
                }
              ]
            },
            "documentation": {
              "id": 5056,
              "nodeType": "StructuredDocumentation",
              "src": "2544:306:5",
              "text": "@notice Mints a number of synthetic tokens for an address.\n@dev Can only be called by addresses with a minter role. \nThis should correspond to the Long Short contract.\n@param to The address for which to mint the tokens for.\n@param amount Amount of synthetic tokens to mint in wei."
            },
            "functionSelector": "40c10f19",
            "id": 5072,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "2862:4:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5062,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2902:8:5"
            },
            "parameters": {
              "id": 5061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5058,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2875:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 5072,
                  "src": "2867:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5057,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2867:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5060,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2887:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 5072,
                  "src": "2879:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5059,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2879:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2866:28:5"
            },
            "returnParameters": {
              "id": 5063,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2911:0:5"
            },
            "scope": 5201,
            "src": "2853:109:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              17705
            ],
            "body": {
              "id": 5099,
              "nodeType": "Block",
              "src": "3305:113:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5082,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3319:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 5083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3319:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 5086,
                              "name": "longShort",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4980,
                              "src": "3341:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 5085,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3333:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5084,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3333:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3333:18:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3319:32:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79204c6f6e6753686f727420636f6e7472616374",
                        "id": 5089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3353:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c333c2ae0690aa8010b8f5a98c7f0714e7e061cb6d976472b37253c9b99b6629",
                          "typeString": "literal_string \"Only LongShort contract\""
                        },
                        "value": "Only LongShort contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c333c2ae0690aa8010b8f5a98c7f0714e7e061cb6d976472b37253c9b99b6629",
                          "typeString": "literal_string \"Only LongShort contract\""
                        }
                      ],
                      "id": 5081,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3311:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3311:68:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5091,
                  "nodeType": "ExpressionStatement",
                  "src": "3311:68:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5095,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5075,
                        "src": "3397:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5096,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5077,
                        "src": "3406:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5092,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "3385:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_SyntheticToken_$5201_$",
                          "typeString": "type(contract super SyntheticToken)"
                        }
                      },
                      "id": 5094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17705,
                      "src": "3385:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 5097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3385:28:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5098,
                  "nodeType": "ExpressionStatement",
                  "src": "3385:28:5"
                }
              ]
            },
            "documentation": {
              "id": 5073,
              "nodeType": "StructuredDocumentation",
              "src": "2966:270:5",
              "text": "@notice Burns or destroys a number of held synthetic tokens for an address.\n @dev Modified to only allow Long Short to burn tokens on redeem.\n @param account The account for which to burn tokens for.\n @param amount The amount of tokens to burn in wei."
            },
            "id": 5100,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "3248:5:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5079,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3296:8:5"
            },
            "parameters": {
              "id": 5078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5075,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3262:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 5100,
                  "src": "3254:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5074,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3254:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5077,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3279:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 5100,
                  "src": "3271:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5076,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3271:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3253:33:5"
            },
            "returnParameters": {
              "id": 5080,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3305:0:5"
            },
            "scope": 5201,
            "src": "3239:179:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              17461
            ],
            "body": {
              "id": 5147,
              "nodeType": "Block",
              "src": "3938:232:5",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 5126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 5118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 5113,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5105,
                        "src": "3948:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 5116,
                            "name": "longShort",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4980,
                            "src": "3969:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3961:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5114,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3961:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3961:18:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3948:31:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 5125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 5119,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3983:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3983:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 5123,
                            "name": "longShort",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4980,
                            "src": "4005:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3997:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5121,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3997:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3997:18:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3983:32:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3948:67:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 5145,
                    "nodeType": "Block",
                    "src": "4099:67:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 5140,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5103,
                              "src": "4133:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 5141,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5105,
                              "src": "4141:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 5142,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5107,
                              "src": "4152:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 5138,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "4114:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_SyntheticToken_$5201_$",
                                "typeString": "type(contract super SyntheticToken)"
                              }
                            },
                            "id": 5139,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17461,
                            "src": "4114:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) returns (bool)"
                            }
                          },
                          "id": 5143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4114:45:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 5112,
                        "id": 5144,
                        "nodeType": "Return",
                        "src": "4107:52:5"
                      }
                    ]
                  },
                  "id": 5146,
                  "nodeType": "IfStatement",
                  "src": "3944:222:5",
                  "trueBody": {
                    "id": 5137,
                    "nodeType": "Block",
                    "src": "4017:76:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 5130,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5103,
                              "src": "4041:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 5131,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5105,
                              "src": "4049:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 5132,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5107,
                              "src": "4060:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 5127,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "4025:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_SyntheticToken_$5201_$",
                                "typeString": "type(contract super SyntheticToken)"
                              }
                            },
                            "id": 5129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17596,
                            "src": "4025:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 5133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4025:42:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5134,
                        "nodeType": "ExpressionStatement",
                        "src": "4025:42:5"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 5135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4082:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 5112,
                        "id": 5136,
                        "nodeType": "Return",
                        "src": "4075:11:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 5101,
              "nodeType": "StructuredDocumentation",
              "src": "3422:393:5",
              "text": "@notice Overrides the default ERC20 transferFrom.\n@dev To allow users to avoid approving LongShort.sol when redeeming tokens,\nlongShort has a virtual infinite allowance when transfering tokens\nto itself.\n@param sender User for which to transfer tokens.\n@param recipient Recipient of the transferred tokens.\n@param amount Amount of tokens to transfer in wei."
            },
            "functionSelector": "23b872dd",
            "id": 5148,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "3827:12:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5109,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3914:8:5"
            },
            "parameters": {
              "id": 5108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5103,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "3853:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 5148,
                  "src": "3845:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5102,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3845:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5105,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "3873:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 5148,
                  "src": "3865:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5104,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3865:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5107,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3896:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 5148,
                  "src": "3888:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5106,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3888:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3839:67:5"
            },
            "returnParameters": {
              "id": 5112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5111,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5148,
                  "src": "3932:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5110,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3932:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3931:6:5"
            },
            "scope": 5201,
            "src": "3818:352:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              18098
            ],
            "body": {
              "id": 5175,
              "nodeType": "Block",
              "src": "4655:144:5",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 5164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5159,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5151,
                      "src": "4665:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 5162,
                          "name": "longShort",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4980,
                          "src": "4683:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 5161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4675:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 5160,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4675:7:5",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 5163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4675:18:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4665:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5174,
                  "nodeType": "IfStatement",
                  "src": "4661:134:5",
                  "trueBody": {
                    "id": 5173,
                    "nodeType": "Block",
                    "src": "4695:100:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 5169,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5151,
                              "src": "4768:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 5170,
                              "name": "marketIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4986,
                              "src": "4776:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 5166,
                                  "name": "longShort",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4980,
                                  "src": "4714:9:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 5165,
                                "name": "ILongShort",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5902,
                                "src": "4703:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILongShort_$5902_$",
                                  "typeString": "type(contract ILongShort)"
                                }
                              },
                              "id": 5167,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4703:21:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ILongShort_$5902",
                                "typeString": "contract ILongShort"
                              }
                            },
                            "id": 5168,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "executeOutstandingNextPriceSettlementsUser",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5874,
                            "src": "4703:64:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint32_$returns$__$",
                              "typeString": "function (address,uint32) external"
                            }
                          },
                          "id": 5171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4703:85:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5172,
                        "nodeType": "ExpressionStatement",
                        "src": "4703:85:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 5149,
              "nodeType": "StructuredDocumentation",
              "src": "4174:380:5",
              "text": "@notice Overrides the OpenZeppelin _beforeTokenTransfer hook\n@dev Ensures that this contract's accounting reflects all the senders's outstanding\ntokens from next price actions before any token transfer occurs.\nRemoval of pausing functionality of ERC20PresetMinterPausable is intentional.\n@param sender User for which tokens are to be transferred for."
            },
            "id": 5176,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "4566:20:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5157,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4646:8:5"
            },
            "parameters": {
              "id": 5156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5151,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "4600:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 5176,
                  "src": "4592:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5150,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4592:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5153,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5176,
                  "src": "4612:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5152,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4612:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5155,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5176,
                  "src": "4625:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5154,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4625:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4586:50:5"
            },
            "returnParameters": {
              "id": 5158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4655:0:5"
            },
            "scope": 5201,
            "src": "4557:242:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              17354
            ],
            "body": {
              "id": 5199,
              "nodeType": "Block",
              "src": "5180:183:5",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 5187,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5179,
                          "src": "5215:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 5185,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17762,
                          "src": "5199:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$17762_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 5186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17354,
                        "src": "5199:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view returns (uint256)"
                        }
                      },
                      "id": 5188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5199:24:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 5193,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5179,
                          "src": "5306:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 5194,
                          "name": "marketIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4986,
                          "src": "5323:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "id": 5195,
                          "name": "isLong",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4989,
                          "src": "5344:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 5190,
                              "name": "longShort",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4980,
                              "src": "5243:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 5189,
                            "name": "ILongShort",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5902,
                            "src": "5232:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ILongShort_$5902_$",
                              "typeString": "type(contract ILongShort)"
                            }
                          },
                          "id": 5191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5232:21:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILongShort_$5902",
                            "typeString": "contract ILongShort"
                          }
                        },
                        "id": 5192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getUsersConfirmedButNotSettledSynthBalance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5867,
                        "src": "5232:64:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_uint32_$_t_bool_$returns$_t_uint256_$",
                          "typeString": "function (address,uint32,bool) view external returns (uint256)"
                        }
                      },
                      "id": 5196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5232:126:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5199:159:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5184,
                  "id": 5198,
                  "nodeType": "Return",
                  "src": "5186:172:5"
                }
              ]
            },
            "documentation": {
              "id": 5177,
              "nodeType": "StructuredDocumentation",
              "src": "4803:291:5",
              "text": "@notice Gets the synthetic token balance of the user in wei.\n@dev To automatically account for next price actions which have been confirmed but not settled,\nincludes any outstanding tokens owed by longShort.\n@param account The address for which to get the balance of."
            },
            "functionSelector": "70a08231",
            "id": 5200,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "5106:9:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5181,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5153:8:5"
            },
            "parameters": {
              "id": 5180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5179,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "5124:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 5200,
                  "src": "5116:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5178,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5116:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5115:17:5"
            },
            "returnParameters": {
              "id": 5184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5183,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5200,
                  "src": "5171:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5182,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5171:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5170:9:5"
            },
            "scope": 5201,
            "src": "5097:266:5",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 5202,
        "src": "447:4918:5"
      }
    ],
    "src": "38:5328:5"
  },
  "legacyAST": {
    "absolutePath": "/home/jasoons/Documents/code/monorepo/contracts/contracts/SyntheticToken.sol",
    "exportedSymbols": {
      "AccessControl": [
        16973
      ],
      "AccessControlEnumerable": [
        17163
      ],
      "Context": [
        18122
      ],
      "ERC165": [
        18349
      ],
      "ERC20": [
        17762
      ],
      "ERC20Burnable": [
        17901
      ],
      "ERC20Pausable": [
        17938
      ],
      "ERC20PresetMinterPauser": [
        18099
      ],
      "EnumerableSet": [
        18874
      ],
      "IAccessControl": [
        16649
      ],
      "IAccessControlEnumerable": [
        16995
      ],
      "IERC165": [
        18361
      ],
      "IERC20": [
        17840
      ],
      "IERC20Metadata": [
        17963
      ],
      "ILongShort": [
        5902
      ],
      "IStaker": [
        5959
      ],
      "ISyntheticToken": [
        5972
      ],
      "Pausable": [
        17255
      ],
      "Strings": [
        18325
      ],
      "SyntheticToken": [
        5201
      ]
    },
    "id": 5202,
    "license": "BUSL-1.1",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4971,
        "literals": [
          "solidity",
          "0.8",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "38:22:5"
      },
      {
        "absolutePath": "/home/jasoons/Documents/code/monorepo/contracts/contracts/interfaces/IStaker.sol",
        "file": "./interfaces/IStaker.sol",
        "id": 4972,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5202,
        "sourceUnit": 5960,
        "src": "62:34:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jasoons/Documents/code/monorepo/contracts/contracts/interfaces/ILongShort.sol",
        "file": "./interfaces/ILongShort.sol",
        "id": 4973,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5202,
        "sourceUnit": 5903,
        "src": "97:37:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jasoons/Documents/code/monorepo/contracts/contracts/interfaces/ISyntheticToken.sol",
        "file": "./interfaces/ISyntheticToken.sol",
        "id": 4974,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5202,
        "sourceUnit": 5973,
        "src": "135:42:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4976,
              "name": "ISyntheticToken",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5972,
              "src": "474:15:5"
            },
            "id": 4977,
            "nodeType": "InheritanceSpecifier",
            "src": "474:15:5"
          }
        ],
        "contractDependencies": [
          5972,
          16649,
          16973,
          16995,
          17163,
          17255,
          17762,
          17840,
          17901,
          17938,
          17963,
          18099,
          18122,
          18349,
          18361
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 4975,
          "nodeType": "StructuredDocumentation",
          "src": "179:267:5",
          "text": "@title SyntheticToken\n@notice An ERC20 token that tracks or inversely tracks the price of an\nunderlying asset with floating exposure.\n@dev Logic for price tracking contained in LongShort.sol. \nThe contract inherits from ERC20PresetMinterPauser.sol"
        },
        "fullyImplemented": true,
        "id": 5201,
        "linearizedBaseContracts": [
          5201,
          5972,
          18099,
          17938,
          17255,
          17901,
          17762,
          17963,
          17840,
          17163,
          16973,
          18349,
          18361,
          16649,
          18122,
          16995
        ],
        "name": "SyntheticToken",
        "nameLocation": "456:14:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 4978,
              "nodeType": "StructuredDocumentation",
              "src": "494:71:5",
              "text": "@notice Address of the LongShort contract, a deployed LongShort.sol"
            },
            "functionSelector": "29949872",
            "id": 4980,
            "mutability": "mutable",
            "name": "longShort",
            "nameLocation": "583:9:5",
            "nodeType": "VariableDeclaration",
            "scope": 5201,
            "src": "568:24:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4979,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "568:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4981,
              "nodeType": "StructuredDocumentation",
              "src": "596:65:5",
              "text": "@notice Address of the Staker contract, a deployed Staker.sol"
            },
            "functionSelector": "5ebaf1db",
            "id": 4983,
            "mutability": "mutable",
            "name": "staker",
            "nameLocation": "679:6:5",
            "nodeType": "VariableDeclaration",
            "scope": 5201,
            "src": "664:21:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4982,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "664:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4984,
              "nodeType": "StructuredDocumentation",
              "src": "689:66:5",
              "text": "@notice Identifies which market in longShort the token is for."
            },
            "functionSelector": "8c7adc15",
            "id": 4986,
            "mutability": "mutable",
            "name": "marketIndex",
            "nameLocation": "772:11:5",
            "nodeType": "VariableDeclaration",
            "scope": 5201,
            "src": "758:25:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 4985,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "758:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4987,
              "nodeType": "StructuredDocumentation",
              "src": "787:76:5",
              "text": "@notice Whether the token is a long token or short token for its market."
            },
            "functionSelector": "202a61a1",
            "id": 4989,
            "mutability": "mutable",
            "name": "isLong",
            "nameLocation": "878:6:5",
            "nodeType": "VariableDeclaration",
            "scope": 5201,
            "src": "866:18:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4988,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "866:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 5025,
              "nodeType": "Block",
              "src": "1534:109:5",
              "statements": [
                {
                  "expression": {
                    "id": 5011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5009,
                      "name": "longShort",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4980,
                      "src": "1540:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5010,
                      "name": "_longShort",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4996,
                      "src": "1552:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1540:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5012,
                  "nodeType": "ExpressionStatement",
                  "src": "1540:22:5"
                },
                {
                  "expression": {
                    "id": 5015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5013,
                      "name": "staker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4983,
                      "src": "1568:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5014,
                      "name": "_staker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4998,
                      "src": "1577:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1568:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5016,
                  "nodeType": "ExpressionStatement",
                  "src": "1568:16:5"
                },
                {
                  "expression": {
                    "id": 5019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5017,
                      "name": "marketIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4986,
                      "src": "1590:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5018,
                      "name": "_marketIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5000,
                      "src": "1604:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "1590:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 5020,
                  "nodeType": "ExpressionStatement",
                  "src": "1590:26:5"
                },
                {
                  "expression": {
                    "id": 5023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5021,
                      "name": "isLong",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4989,
                      "src": "1622:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5022,
                      "name": "_isLong",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5002,
                      "src": "1631:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1622:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5024,
                  "nodeType": "ExpressionStatement",
                  "src": "1622:16:5"
                }
              ]
            },
            "documentation": {
              "id": 4990,
              "nodeType": "StructuredDocumentation",
              "src": "889:450:5",
              "text": "@notice Creates an instance of the contract.\n @dev Should only be called by TokenFactory.sol for our system.\n @param name The name of the token.\n @param symbol The symbol for the token.\n @param _longShort Address of the core LongShort contract.\n @param _staker Address of the staker contract.\n @param _marketIndex Which market the token is for.\n @param _isLong Whether the token is long or short for its market."
            },
            "id": 5026,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5005,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4992,
                    "src": "1520:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 5006,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4994,
                    "src": "1526:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 5007,
                "modifierName": {
                  "id": 5004,
                  "name": "ERC20PresetMinterPauser",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18099,
                  "src": "1496:23:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "1496:37:5"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5003,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4992,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1373:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 5026,
                  "src": "1359:18:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4991,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1359:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4994,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "1397:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 5026,
                  "src": "1383:20:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4993,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1383:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4996,
                  "mutability": "mutable",
                  "name": "_longShort",
                  "nameLocation": "1417:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 5026,
                  "src": "1409:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4995,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1409:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4998,
                  "mutability": "mutable",
                  "name": "_staker",
                  "nameLocation": "1441:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 5026,
                  "src": "1433:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4997,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1433:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5000,
                  "mutability": "mutable",
                  "name": "_marketIndex",
                  "nameLocation": "1461:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 5026,
                  "src": "1454:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 4999,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1454:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5002,
                  "mutability": "mutable",
                  "name": "_isLong",
                  "nameLocation": "1484:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 5026,
                  "src": "1479:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5001,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1479:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1353:142:5"
            },
            "returnParameters": {
              "id": 5008,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1534:0:5"
            },
            "scope": 5201,
            "src": "1342:301:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5971
            ],
            "body": {
              "id": 5054,
              "nodeType": "Block",
              "src": "1868:258:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5036,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2029:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2029:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 5040,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4983,
                            "src": "2049:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2041:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5038,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2041:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2041:15:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5042,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5029,
                        "src": "2058:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5033,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2013:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_SyntheticToken_$5201_$",
                          "typeString": "type(contract super SyntheticToken)"
                        }
                      },
                      "id": 5035,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17596,
                      "src": "2013:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2013:52:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5044,
                  "nodeType": "ExpressionStatement",
                  "src": "2013:52:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5049,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2102:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2102:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5051,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5029,
                        "src": "2114:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 5046,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4983,
                            "src": "2080:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5045,
                          "name": "IStaker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5959,
                          "src": "2072:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IStaker_$5959_$",
                            "typeString": "type(contract IStaker)"
                          }
                        },
                        "id": 5047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2072:15:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStaker_$5959",
                          "typeString": "contract IStaker"
                        }
                      },
                      "id": 5048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stakeFromUser",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5958,
                      "src": "2072:29:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 5052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2072:49:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5053,
                  "nodeType": "ExpressionStatement",
                  "src": "2072:49:5"
                }
              ]
            },
            "documentation": {
              "id": 5027,
              "nodeType": "StructuredDocumentation",
              "src": "1647:169:5",
              "text": "@notice Allows users to stake their synthetic tokens to earn Float.\n @dev Core staking logic contained in Staker.sol\n @param amount Amount to stake in wei."
            },
            "functionSelector": "a694fc3a",
            "id": 5055,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stake",
            "nameLocation": "1828:5:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5031,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1859:8:5"
            },
            "parameters": {
              "id": 5030,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5029,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1842:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 5055,
                  "src": "1834:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5028,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1834:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1833:16:5"
            },
            "returnParameters": {
              "id": 5032,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1868:0:5"
            },
            "scope": 5201,
            "src": "1819:307:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              18043
            ],
            "body": {
              "id": 5071,
              "nodeType": "Block",
              "src": "2911:51:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5067,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5058,
                        "src": "2946:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5068,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5060,
                        "src": "2950:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5064,
                        "name": "ERC20PresetMinterPauser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18099,
                        "src": "2917:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20PresetMinterPauser_$18099_$",
                          "typeString": "type(contract ERC20PresetMinterPauser)"
                        }
                      },
                      "id": 5066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18043,
                      "src": "2917:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 5069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2917:40:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5070,
                  "nodeType": "ExpressionStatement",
                  "src": "2917:40:5"
                }
              ]
            },
            "documentation": {
              "id": 5056,
              "nodeType": "StructuredDocumentation",
              "src": "2544:306:5",
              "text": "@notice Mints a number of synthetic tokens for an address.\n@dev Can only be called by addresses with a minter role. \nThis should correspond to the Long Short contract.\n@param to The address for which to mint the tokens for.\n@param amount Amount of synthetic tokens to mint in wei."
            },
            "functionSelector": "40c10f19",
            "id": 5072,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "2862:4:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5062,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2902:8:5"
            },
            "parameters": {
              "id": 5061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5058,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2875:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 5072,
                  "src": "2867:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5057,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2867:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5060,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2887:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 5072,
                  "src": "2879:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5059,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2879:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2866:28:5"
            },
            "returnParameters": {
              "id": 5063,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2911:0:5"
            },
            "scope": 5201,
            "src": "2853:109:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              17705
            ],
            "body": {
              "id": 5099,
              "nodeType": "Block",
              "src": "3305:113:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5082,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3319:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 5083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3319:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 5086,
                              "name": "longShort",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4980,
                              "src": "3341:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 5085,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3333:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5084,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3333:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3333:18:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3319:32:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79204c6f6e6753686f727420636f6e7472616374",
                        "id": 5089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3353:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c333c2ae0690aa8010b8f5a98c7f0714e7e061cb6d976472b37253c9b99b6629",
                          "typeString": "literal_string \"Only LongShort contract\""
                        },
                        "value": "Only LongShort contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c333c2ae0690aa8010b8f5a98c7f0714e7e061cb6d976472b37253c9b99b6629",
                          "typeString": "literal_string \"Only LongShort contract\""
                        }
                      ],
                      "id": 5081,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3311:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3311:68:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5091,
                  "nodeType": "ExpressionStatement",
                  "src": "3311:68:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5095,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5075,
                        "src": "3397:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5096,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5077,
                        "src": "3406:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5092,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "3385:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_SyntheticToken_$5201_$",
                          "typeString": "type(contract super SyntheticToken)"
                        }
                      },
                      "id": 5094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17705,
                      "src": "3385:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 5097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3385:28:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5098,
                  "nodeType": "ExpressionStatement",
                  "src": "3385:28:5"
                }
              ]
            },
            "documentation": {
              "id": 5073,
              "nodeType": "StructuredDocumentation",
              "src": "2966:270:5",
              "text": "@notice Burns or destroys a number of held synthetic tokens for an address.\n @dev Modified to only allow Long Short to burn tokens on redeem.\n @param account The account for which to burn tokens for.\n @param amount The amount of tokens to burn in wei."
            },
            "id": 5100,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "3248:5:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5079,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3296:8:5"
            },
            "parameters": {
              "id": 5078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5075,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3262:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 5100,
                  "src": "3254:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5074,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3254:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5077,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3279:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 5100,
                  "src": "3271:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5076,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3271:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3253:33:5"
            },
            "returnParameters": {
              "id": 5080,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3305:0:5"
            },
            "scope": 5201,
            "src": "3239:179:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              17461
            ],
            "body": {
              "id": 5147,
              "nodeType": "Block",
              "src": "3938:232:5",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 5126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 5118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 5113,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5105,
                        "src": "3948:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 5116,
                            "name": "longShort",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4980,
                            "src": "3969:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3961:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5114,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3961:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3961:18:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3948:31:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 5125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 5119,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3983:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3983:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 5123,
                            "name": "longShort",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4980,
                            "src": "4005:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3997:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5121,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3997:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3997:18:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3983:32:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3948:67:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 5145,
                    "nodeType": "Block",
                    "src": "4099:67:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 5140,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5103,
                              "src": "4133:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 5141,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5105,
                              "src": "4141:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 5142,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5107,
                              "src": "4152:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 5138,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "4114:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_SyntheticToken_$5201_$",
                                "typeString": "type(contract super SyntheticToken)"
                              }
                            },
                            "id": 5139,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17461,
                            "src": "4114:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) returns (bool)"
                            }
                          },
                          "id": 5143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4114:45:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 5112,
                        "id": 5144,
                        "nodeType": "Return",
                        "src": "4107:52:5"
                      }
                    ]
                  },
                  "id": 5146,
                  "nodeType": "IfStatement",
                  "src": "3944:222:5",
                  "trueBody": {
                    "id": 5137,
                    "nodeType": "Block",
                    "src": "4017:76:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 5130,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5103,
                              "src": "4041:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 5131,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5105,
                              "src": "4049:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 5132,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5107,
                              "src": "4060:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 5127,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "4025:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_SyntheticToken_$5201_$",
                                "typeString": "type(contract super SyntheticToken)"
                              }
                            },
                            "id": 5129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17596,
                            "src": "4025:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 5133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4025:42:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5134,
                        "nodeType": "ExpressionStatement",
                        "src": "4025:42:5"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 5135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4082:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 5112,
                        "id": 5136,
                        "nodeType": "Return",
                        "src": "4075:11:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 5101,
              "nodeType": "StructuredDocumentation",
              "src": "3422:393:5",
              "text": "@notice Overrides the default ERC20 transferFrom.\n@dev To allow users to avoid approving LongShort.sol when redeeming tokens,\nlongShort has a virtual infinite allowance when transfering tokens\nto itself.\n@param sender User for which to transfer tokens.\n@param recipient Recipient of the transferred tokens.\n@param amount Amount of tokens to transfer in wei."
            },
            "functionSelector": "23b872dd",
            "id": 5148,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "3827:12:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5109,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3914:8:5"
            },
            "parameters": {
              "id": 5108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5103,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "3853:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 5148,
                  "src": "3845:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5102,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3845:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5105,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "3873:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 5148,
                  "src": "3865:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5104,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3865:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5107,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3896:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 5148,
                  "src": "3888:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5106,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3888:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3839:67:5"
            },
            "returnParameters": {
              "id": 5112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5111,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5148,
                  "src": "3932:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5110,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3932:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3931:6:5"
            },
            "scope": 5201,
            "src": "3818:352:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              18098
            ],
            "body": {
              "id": 5175,
              "nodeType": "Block",
              "src": "4655:144:5",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 5164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5159,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5151,
                      "src": "4665:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 5162,
                          "name": "longShort",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4980,
                          "src": "4683:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 5161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4675:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 5160,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4675:7:5",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 5163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4675:18:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4665:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5174,
                  "nodeType": "IfStatement",
                  "src": "4661:134:5",
                  "trueBody": {
                    "id": 5173,
                    "nodeType": "Block",
                    "src": "4695:100:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 5169,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5151,
                              "src": "4768:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 5170,
                              "name": "marketIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4986,
                              "src": "4776:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 5166,
                                  "name": "longShort",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4980,
                                  "src": "4714:9:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 5165,
                                "name": "ILongShort",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5902,
                                "src": "4703:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILongShort_$5902_$",
                                  "typeString": "type(contract ILongShort)"
                                }
                              },
                              "id": 5167,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4703:21:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ILongShort_$5902",
                                "typeString": "contract ILongShort"
                              }
                            },
                            "id": 5168,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "executeOutstandingNextPriceSettlementsUser",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5874,
                            "src": "4703:64:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint32_$returns$__$",
                              "typeString": "function (address,uint32) external"
                            }
                          },
                          "id": 5171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4703:85:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5172,
                        "nodeType": "ExpressionStatement",
                        "src": "4703:85:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 5149,
              "nodeType": "StructuredDocumentation",
              "src": "4174:380:5",
              "text": "@notice Overrides the OpenZeppelin _beforeTokenTransfer hook\n@dev Ensures that this contract's accounting reflects all the senders's outstanding\ntokens from next price actions before any token transfer occurs.\nRemoval of pausing functionality of ERC20PresetMinterPausable is intentional.\n@param sender User for which tokens are to be transferred for."
            },
            "id": 5176,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "4566:20:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5157,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4646:8:5"
            },
            "parameters": {
              "id": 5156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5151,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "4600:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 5176,
                  "src": "4592:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5150,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4592:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5153,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5176,
                  "src": "4612:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5152,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4612:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5155,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5176,
                  "src": "4625:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5154,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4625:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4586:50:5"
            },
            "returnParameters": {
              "id": 5158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4655:0:5"
            },
            "scope": 5201,
            "src": "4557:242:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              17354
            ],
            "body": {
              "id": 5199,
              "nodeType": "Block",
              "src": "5180:183:5",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 5187,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5179,
                          "src": "5215:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 5185,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17762,
                          "src": "5199:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$17762_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 5186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17354,
                        "src": "5199:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view returns (uint256)"
                        }
                      },
                      "id": 5188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5199:24:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 5193,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5179,
                          "src": "5306:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 5194,
                          "name": "marketIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4986,
                          "src": "5323:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "id": 5195,
                          "name": "isLong",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4989,
                          "src": "5344:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 5190,
                              "name": "longShort",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4980,
                              "src": "5243:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 5189,
                            "name": "ILongShort",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5902,
                            "src": "5232:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ILongShort_$5902_$",
                              "typeString": "type(contract ILongShort)"
                            }
                          },
                          "id": 5191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5232:21:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILongShort_$5902",
                            "typeString": "contract ILongShort"
                          }
                        },
                        "id": 5192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getUsersConfirmedButNotSettledSynthBalance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5867,
                        "src": "5232:64:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_uint32_$_t_bool_$returns$_t_uint256_$",
                          "typeString": "function (address,uint32,bool) view external returns (uint256)"
                        }
                      },
                      "id": 5196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5232:126:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5199:159:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5184,
                  "id": 5198,
                  "nodeType": "Return",
                  "src": "5186:172:5"
                }
              ]
            },
            "documentation": {
              "id": 5177,
              "nodeType": "StructuredDocumentation",
              "src": "4803:291:5",
              "text": "@notice Gets the synthetic token balance of the user in wei.\n@dev To automatically account for next price actions which have been confirmed but not settled,\nincludes any outstanding tokens owed by longShort.\n@param account The address for which to get the balance of."
            },
            "functionSelector": "70a08231",
            "id": 5200,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "5106:9:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5181,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5153:8:5"
            },
            "parameters": {
              "id": 5180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5179,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "5124:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 5200,
                  "src": "5116:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5178,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5116:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5115:17:5"
            },
            "returnParameters": {
              "id": 5184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5183,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5200,
                  "src": "5171:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5182,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5171:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5170:9:5"
            },
            "scope": 5201,
            "src": "5097:266:5",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 5202,
        "src": "447:4918:5"
      }
    ],
    "src": "38:5328:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.3+commit.8d00100c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-08-04T10:05:24.569Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "Logic for price tracking contained in LongShort.sol.  The contract inherits from ERC20PresetMinterPauser.sol",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "To automatically account for next price actions which have been confirmed but not settled, includes any outstanding tokens owed by longShort.",
        "params": {
          "account": "The address for which to get the balance of."
        }
      },
      "burn(uint256)": {
        "details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
      },
      "burnFrom(address,uint256)": {
        "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
      },
      "constructor": {
        "details": "Should only be called by TokenFactory.sol for our system.",
        "params": {
          "_isLong": "Whether the token is long or short for its market.",
          "_longShort": "Address of the core LongShort contract.",
          "_marketIndex": "Which market the token is for.",
          "_staker": "Address of the staker contract.",
          "name": "The name of the token.",
          "symbol": "The symbol for the token."
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Overload {grantRole} to track enumerable memberships"
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "details": "Can only be called by addresses with a minter role.  This should correspond to the Long Short contract.",
        "params": {
          "amount": "Amount of synthetic tokens to mint in wei.",
          "to": "The address for which to mint the tokens for."
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "pause()": {
        "details": "Pauses all token transfers. See {ERC20Pausable} and {Pausable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceRole(bytes32,address)": {
        "details": "Overload {renounceRole} to track enumerable memberships"
      },
      "revokeRole(bytes32,address)": {
        "details": "Overload {revokeRole} to track enumerable memberships"
      },
      "stake(uint256)": {
        "details": "Core staking logic contained in Staker.sol",
        "params": {
          "amount": "Amount to stake in wei."
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "To allow users to avoid approving LongShort.sol when redeeming tokens, longShort has a virtual infinite allowance when transfering tokens to itself.",
        "params": {
          "amount": "Amount of tokens to transfer in wei.",
          "recipient": "Recipient of the transferred tokens.",
          "sender": "User for which to transfer tokens."
        }
      },
      "unpause()": {
        "details": "Unpauses all token transfers. See {ERC20Pausable} and {Pausable-_unpause}. Requirements: - the caller must have the `PAUSER_ROLE`."
      }
    },
    "title": "SyntheticToken",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "balanceOf(address)": {
        "notice": "Gets the synthetic token balance of the user in wei."
      },
      "constructor": {
        "notice": "Creates an instance of the contract."
      },
      "isLong()": {
        "notice": "Whether the token is a long token or short token for its market."
      },
      "longShort()": {
        "notice": "Address of the LongShort contract, a deployed LongShort.sol"
      },
      "marketIndex()": {
        "notice": "Identifies which market in longShort the token is for."
      },
      "mint(address,uint256)": {
        "notice": "Mints a number of synthetic tokens for an address."
      },
      "stake(uint256)": {
        "notice": "Allows users to stake their synthetic tokens to earn Float."
      },
      "staker()": {
        "notice": "Address of the Staker contract, a deployed Staker.sol"
      },
      "transferFrom(address,address,uint256)": {
        "notice": "Overrides the default ERC20 transferFrom."
      }
    },
    "notice": "An ERC20 token that tracks or inversely tracks the price of an underlying asset with floating exposure.",
    "version": 1
  }
}